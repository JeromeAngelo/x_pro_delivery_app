// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'core/common/app/features/Trip_Ticket/cancelled_invoices/data/model/cancelled_invoice_model.dart';
import 'core/common/app/features/Trip_Ticket/cancelled_invoices/domain/entity/cancelled_invoice_entity.dart';
import 'core/common/app/features/Trip_Ticket/collection/data/model/collection_model.dart';
import 'core/common/app/features/Trip_Ticket/collection/domain/entity/collection_entity.dart';
import 'core/common/app/features/Trip_Ticket/customer_data/data/model/customer_data_model.dart';
import 'core/common/app/features/Trip_Ticket/customer_data/domain/entity/customer_data_entity.dart';
import 'core/common/app/features/Trip_Ticket/delivery_data/data/model/delivery_data_model.dart';
import 'core/common/app/features/Trip_Ticket/delivery_data/domain/entity/delivery_data_entity.dart';
import 'core/common/app/features/Trip_Ticket/delivery_receipt/data/model/delivery_receipt_model.dart';
import 'core/common/app/features/Trip_Ticket/delivery_receipt/domain/entity/delivery_receipt_entity.dart';
import 'core/common/app/features/Trip_Ticket/delivery_receipt_items/data/model/delivery_receipt_items_model.dart';
import 'core/common/app/features/Trip_Ticket/delivery_receipt_items/domain/entity/delivery_receipt_items_entity.dart';
import 'core/common/app/features/Trip_Ticket/delivery_update/data/models/delivery_update_model.dart';
import 'core/common/app/features/Trip_Ticket/delivery_update/domain/entity/delivery_update_entity.dart';
import 'core/common/app/features/Trip_Ticket/delivery_vehicle_data/data/model/delivery_vehicle_model.dart';
import 'core/common/app/features/Trip_Ticket/delivery_vehicle_data/domain/enitity/delivery_vehicle_entity.dart';
import 'core/common/app/features/Trip_Ticket/invoice_data/data/model/invoice_data_model.dart';
import 'core/common/app/features/Trip_Ticket/invoice_data/domain/entity/invoice_data_entity.dart';
import 'core/common/app/features/Trip_Ticket/invoice_items/data/model/invoice_items_model.dart';
import 'core/common/app/features/Trip_Ticket/invoice_items/domain/entity/invoice_items_entity.dart';
import 'core/common/app/features/Trip_Ticket/return_items/data/model/return_items_model.dart';
import 'core/common/app/features/Trip_Ticket/return_items/domain/entity/return_items_entity.dart';
import 'core/common/app/features/Trip_Ticket/trip/data/models/trip_models.dart';
import 'core/common/app/features/Trip_Ticket/trip/domain/entity/trip_entity.dart';
import 'core/common/app/features/Trip_Ticket/trip_updates/data/model/trip_update_model.dart';
import 'core/common/app/features/Trip_Ticket/trip_updates/domain/entity/trip_update_entity.dart';
import 'core/common/app/features/Trip_Ticket/update_timeline/data/models/update_timeline_models.dart';
import 'core/common/app/features/Trip_Ticket/update_timeline/domain/entity/update_timeline_entity.dart';
import 'core/common/app/features/checklist/data/model/checklist_model.dart';
import 'core/common/app/features/checklist/domain/entity/checklist_entity.dart';
import 'core/common/app/features/delivery_team/delivery_team/data/models/delivery_team_model.dart';
import 'core/common/app/features/delivery_team/delivery_team/domain/entity/delivery_team_entity.dart';
import 'core/common/app/features/delivery_team/personels/data/models/personel_models.dart';
import 'core/common/app/features/delivery_team/personels/domain/entity/personel_entity.dart';
import 'core/common/app/features/delivery_team/vehicle/data/model/vehicle_model.dart';
import 'core/common/app/features/delivery_team/vehicle/domain/entity/vehicle_entity.dart';
import 'core/common/app/features/end_trip_checklist/data/model/end_trip_checklist_model.dart';
import 'core/common/app/features/end_trip_checklist/domain/entity/end_checklist_entity.dart';
import 'core/common/app/features/end_trip_otp/data/model/end_trip_model.dart';
import 'core/common/app/features/end_trip_otp/domain/entity/end_trip_otp_entity.dart';
import 'core/common/app/features/otp/data/models/otp_models.dart';
import 'core/common/app/features/otp/domain/entity/otp_entity.dart';
import 'src/auth/data/models/auth_models.dart';
import 'src/auth/domain/entity/users_entity.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
    id: const obx_int.IdUid(1, 8278670380677883868),
    name: 'LocalUser',
    lastPropertyId: const obx_int.IdUid(28, 1119544490582682879),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 8092750327433260),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 3772493454375589782),
        name: 'email',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 3455812979128153817),
        name: 'profilePic',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 2239427814570972009),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 2114045489098269834),
        name: 'tripNumberId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(22, 3520250928743885914),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(23, 5097115423714955296),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(24, 6148436269133931972),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(25, 761780313740976048),
        name: 'tripId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(40, 124209545521540075),
        relationTarget: 'TripModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(26, 8952936577818342021),
        name: 'deliveryTeamId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(42, 6459650309448698702),
        relationTarget: 'DeliveryTeamModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(27, 3760358077954491990),
        name: 'token',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(2, 2437256378976969932),
    name: 'ChecklistEntity',
    lastPropertyId: const obx_int.IdUid(7, 94474667100763187),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4477987743165216934),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 3931591266541154713),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 5867174164226154781),
        name: 'objectName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 522061422086891091),
        name: 'isChecked',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 4434074810226791799),
        name: 'status',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 8940432436861085673),
        name: 'timeCompleted',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 94474667100763187),
        name: 'tripId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(41, 5008797146945500630),
        relationTarget: 'TripModel',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(3, 1642281493645422089),
    name: 'ChecklistModel',
    lastPropertyId: const obx_int.IdUid(9, 3579455420369730652),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 8031641174212398977),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 2912809523573672447),
        name: 'tripId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 4133133059971107355),
        name: 'pocketBaseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 3579455420369730652),
        name: 'isChecked',
        type: 1,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(6, 3030380395827557545),
    name: 'DeliveryUpdateEntity',
    lastPropertyId: const obx_int.IdUid(15, 8187351072217879784),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2872014589800890025),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 4510343960395030145),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 1963893039403240492),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1149887436990373064),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 6023778725503830578),
        name: 'title',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 3389140036369585595),
        name: 'subtitle',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 3751266713506871109),
        name: 'time',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 9210493944751373739),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 7534054163778508981),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 4301795890561203656),
        name: 'customer',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 339301082955252596),
        name: 'isAssigned',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 2514652108917566499),
        name: 'assignedTo',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 4125497972464191773),
        name: 'image',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 9207743476254050728),
        name: 'remarks',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(15, 8187351072217879784),
        name: 'deliveryDataId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(53, 8117827002727378821),
        relationTarget: 'DeliveryDataModel',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(7, 743757926875478403),
    name: 'DeliveryUpdateModel',
    lastPropertyId: const obx_int.IdUid(15, 3835893324442889868),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 3125113937303846028),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 2390634401853740969),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(15, 3835893324442889868),
        name: 'customer',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(10, 4782152680528557896),
    name: 'PersonelEntity',
    lastPropertyId: const obx_int.IdUid(9, 3565892398588450264),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 9166391245504139454),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 6959278537002403254),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 3895615444469194375),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 7572438726892229144),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 7181989841462903246),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 6400523452675398463),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 3981896081873859853),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 4464013545579720312),
        name: 'deliveryTeamId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(31, 7728192773003880619),
        relationTarget: 'DeliveryTeamModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 3565892398588450264),
        name: 'tripId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(32, 2725745165475775246),
        relationTarget: 'TripModel',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(11, 6114492281946439458),
    name: 'PersonelModel',
    lastPropertyId: const obx_int.IdUid(11, 4587561234129879826),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 4348728843700536428),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 6965507140557150922),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 3968780198185668754),
        name: 'tripId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 4587561234129879826),
        name: 'deliveryTeamId',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(14, 4634356157032572206),
    name: 'TripEntity',
    lastPropertyId: const obx_int.IdUid(22, 245363032872952798),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 8331655926247374688),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 311333714104891901),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 6239376025946591758),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 8017420667308803322),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 8763390681432738921),
        name: 'tripNumberId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 8055234233253314331),
        name: 'timelineId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(3, 9101044710165158669),
        relationTarget: 'UpdateTimelineModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 8715294592410334777),
        name: 'isAccepted',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 3711484348110405773),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 1628851151417726000),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 8071478128879828670),
        name: 'timeAccepted',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 6882837936944343347),
        name: 'deliveryTeamId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(23, 5349887073563019195),
        relationTarget: 'DeliveryTeamModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 6887230557996274240),
        name: 'otpId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(29, 7549525326544430329),
        relationTarget: 'OtpModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 8136254872264618090),
        name: 'endTripOtpId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(30, 8999944981528090819),
        relationTarget: 'EndTripOtpModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(15, 4941899855765488894),
        name: 'isEndTrip',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(16, 6727132840220338073),
        name: 'timeEndTrip',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(17, 6531624176651104398),
        name: 'totalTripDistance',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(18, 7411264566326524894),
        name: 'qrCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(19, 7919928115341683040),
        name: 'userId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(43, 531173930812991960),
        relationTarget: 'LocalUsersModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(20, 5613982689448357445),
        name: 'latitude',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(21, 4551943407444772877),
        name: 'longitude',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(22, 245363032872952798),
        name: 'deliveryVehicleId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(61, 8619182400183796725),
        relationTarget: 'DeliveryVehicleModel',
      ),
    ],
    relations: <obx_int.ModelRelation>[
      obx_int.ModelRelation(
        id: const obx_int.IdUid(8, 3785961766489236590),
        name: 'personels',
        targetId: const obx_int.IdUid(11, 6114492281946439458),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(9, 1839302727849658408),
        name: 'checklist',
        targetId: const obx_int.IdUid(3, 1642281493645422089),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(19, 9059256670982983459),
        name: 'vehicle',
        targetId: const obx_int.IdUid(19, 2221868557555259792),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(41, 1790612701283068757),
        name: 'endTripChecklist',
        targetId: const obx_int.IdUid(43, 2966284262887622250),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(43, 6298771103393394809),
        name: 'tripUpdates',
        targetId: const obx_int.IdUid(48, 8340272642715376828),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(46, 78219375503453127),
        name: 'deliveryData',
        targetId: const obx_int.IdUid(55, 8423633885083896888),
      ),
    ],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(15, 8914728044268258781),
    name: 'TripModel',
    lastPropertyId: const obx_int.IdUid(12, 1234570302468668782),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 2912521654645147918),
        name: 'objectBoxId',
        type: 6,
        flags: 129,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 1234570302468668782),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(16, 937918581849543207),
    name: 'UpdateTimelineEntity',
    lastPropertyId: const obx_int.IdUid(6, 4163351549138731239),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 6186365132359912635),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 4172421423966186718),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 6325676081482135511),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 2950505108334920364),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 2894228457296743553),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 4163351549138731239),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(17, 2516527742303567496),
    name: 'UpdateTimelineModel',
    lastPropertyId: const obx_int.IdUid(6, 8422213836280040162),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 7543617251530756104),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 5654570394661900185),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 4054983847623094980),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1542758854891727305),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 8118348817022776716),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 8422213836280040162),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(18, 4333057689990297160),
    name: 'VehicleEntity',
    lastPropertyId: const obx_int.IdUid(11, 5008752805959440831),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 3184061274569432270),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 8057469913794903815),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 5310961405297681090),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1492033224014375763),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 8128311458033104675),
        name: 'vehicleName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 4371168023259649949),
        name: 'vehiclePlateNumber',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 5356208287296348895),
        name: 'vehicleType',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 1619972481835330093),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 6590600448549686068),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 8532757649039017378),
        name: 'deliveryTeamId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(33, 7879931348105043187),
        relationTarget: 'DeliveryTeamModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 5008752805959440831),
        name: 'tripId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(34, 8207050717615641471),
        relationTarget: 'TripModel',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(19, 2221868557555259792),
    name: 'VehicleModel',
    lastPropertyId: const obx_int.IdUid(13, 4239136672454108126),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 470859633088862700),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 8310058358750134313),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 474734031823528984),
        name: 'tripId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 4239136672454108126),
        name: 'deliveryTeamId',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(20, 3827618117737923097),
    name: 'DeliveryTeamEntity',
    lastPropertyId: const obx_int.IdUid(14, 209634526167592840),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4021125925690014592),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 1728716429982816714),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 3955318567771985141),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 7450810517738687855),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 299598900691912166),
        name: 'activeDeliveries',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 3634252224675327345),
        name: 'totalDelivered',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 3353116449410246463),
        name: 'totalDistanceTravelled',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 6255876164463889503),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 423417278038742725),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 1773645114622699408),
        name: 'undeliveredCustomers',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 8165478066265954911),
        name: 'tripId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(21, 830914855730843355),
        relationTarget: 'TripModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 209634526167592840),
        name: 'deliveryVehicleId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(58, 6533658377279110948),
        relationTarget: 'DeliveryVehicleModel',
      ),
    ],
    relations: <obx_int.ModelRelation>[
      obx_int.ModelRelation(
        id: const obx_int.IdUid(13, 8061470341385443398),
        name: 'personels',
        targetId: const obx_int.IdUid(11, 6114492281946439458),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(14, 7896462966271049217),
        name: 'checklist',
        targetId: const obx_int.IdUid(3, 1642281493645422089),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(20, 3677489048848750233),
        name: 'vehicle',
        targetId: const obx_int.IdUid(19, 2221868557555259792),
      ),
    ],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(24, 643024459725978300),
    name: 'OtpModel',
    lastPropertyId: const obx_int.IdUid(9, 7211628598320049830),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4557798915105780545),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 9140415642245004041),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 5514683999879237980),
        name: 'otpCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1203840555742406130),
        name: 'generatedCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 943925897027227969),
        name: 'isVerified',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 4141566973643536495),
        name: 'createdAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 4004611392860737254),
        name: 'expiresAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 799240029127897019),
        name: 'verifiedAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 7211628598320049830),
        name: 'tripId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(123, 212432795640100884),
        relationTarget: 'TripModel',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(28, 7427438328308874200),
    name: 'LocalUsersModel',
    lastPropertyId: const obx_int.IdUid(26, 3147787524653339424),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(22, 7118967602015234264),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(23, 8503047217667845871),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(24, 7551472861255514630),
        name: 'tripId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(25, 819799394032496594),
        name: 'deliveryTeamId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(26, 3147787524653339424),
        name: 'token',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(29, 5712654757194167079),
    name: 'DeliveryTeamModel',
    lastPropertyId: const obx_int.IdUid(3, 3552847195292051829),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2313676663934023492),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 6857897770363156194),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 3552847195292051829),
        name: 'tripId',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(42, 792996251176618181),
    name: 'EndChecklistEntity',
    lastPropertyId: const obx_int.IdUid(7, 4872620912309772707),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 993407976825458506),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 6180605324378926902),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 3635790849741874685),
        name: 'objectName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 7246786467333471832),
        name: 'isChecked',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 2192373627021538263),
        name: 'status',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 777439657364217530),
        name: 'timeCompleted',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 4872620912309772707),
        name: 'trip',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(43, 2966284262887622250),
    name: 'EndTripChecklistModel',
    lastPropertyId: const obx_int.IdUid(6, 6987941804636964193),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4688045235485403187),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 2497662157408653586),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 5234942605294889225),
        name: 'objectName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 6497557161687300793),
        name: 'isChecked',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 4806679431450460278),
        name: 'status',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 6987941804636964193),
        name: 'trip',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(47, 3525944426048839466),
    name: 'TripUpdateEntity',
    lastPropertyId: const obx_int.IdUid(10, 352449712989912343),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4901701440858827615),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 4385970042061235222),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 5439995069398349660),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 8617933621496379187),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 7617129892896370951),
        name: 'date',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 1986567278734983987),
        name: 'image',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 2301721007510007266),
        name: 'description',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 8315970559949902738),
        name: 'latitude',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 1509613113570699495),
        name: 'longitude',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 352449712989912343),
        name: 'tripId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(24, 4860185457431415277),
        relationTarget: 'TripModel',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(48, 8340272642715376828),
    name: 'TripUpdateModel',
    lastPropertyId: const obx_int.IdUid(3, 5159939301141199792),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 3339049301227088481),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 2519476872926955778),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 5159939301141199792),
        name: 'tripId',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(49, 1131722236529943803),
    name: 'EndTripOtpModel',
    lastPropertyId: const obx_int.IdUid(9, 450557366528971416),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2153301131389480900),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 3501068772274110439),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 6593792952443977985),
        name: 'otpCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 3824144617639256991),
        name: 'generatedCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 5319112439839724392),
        name: 'isVerified',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 5017239233748648122),
        name: 'createdAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 8556722920323910051),
        name: 'expiresAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 6054709776274326083),
        name: 'verifiedAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 450557366528971416),
        name: 'tripId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(122, 1171187708824140506),
        relationTarget: 'TripModel',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(50, 5941042707820935484),
    name: 'EndTripOtpEntity',
    lastPropertyId: const obx_int.IdUid(10, 4110476614063380959),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 3448734606175245413),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 4938343817719946011),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 6081123548549574525),
        name: 'otpCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 5487622200613296526),
        name: 'generatedCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 894217468241371721),
        name: 'isVerified',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 3845387719778105177),
        name: 'createdAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 7537857964352029569),
        name: 'expiresAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 6676027769759253249),
        name: 'verifiedAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 14288157266564761),
        name: 'tripId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(27, 6013288350372582445),
        relationTarget: 'TripModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 4110476614063380959),
        name: 'endTripOdometer',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(51, 644365920268088622),
    name: 'OtpEntity',
    lastPropertyId: const obx_int.IdUid(10, 5622219702744553453),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 6582525345214236852),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 2845022542673206518),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 2921851186473326785),
        name: 'otpCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 8882587011533747056),
        name: 'generatedCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 5576716717786791508),
        name: 'isVerified',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 4782956038354887062),
        name: 'createdAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 3028890394502713668),
        name: 'expiresAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 5022640461465373847),
        name: 'verifiedAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 1142875064865309875),
        name: 'tripId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(28, 1576209480408598494),
        relationTarget: 'TripModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 5622219702744553453),
        name: 'intransitOdometer',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(52, 9083427205524041375),
    name: 'CustomerDataEntity',
    lastPropertyId: const obx_int.IdUid(16, 4260745180941735885),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4868288152570646043),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 8206230229738950286),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 4725597140303171333),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 6278899991849064350),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 614509000958955798),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 3793187981659323346),
        name: 'refId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 5496476561129568530),
        name: 'province',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 5884791488567902038),
        name: 'municipality',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 6701347040662838281),
        name: 'barangay',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 2783775945740123000),
        name: 'longitude',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 3025217968909891973),
        name: 'latitude',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 5926541534332922823),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 1934374496140161182),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 1466543434623790523),
        name: 'paymentMode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(15, 7202673304775741392),
        name: 'ownerName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(16, 4260745180941735885),
        name: 'contactNumber',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(53, 5190305223310503460),
    name: 'CustomerDataModel',
    lastPropertyId: const obx_int.IdUid(2, 2394894553572228419),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2168481243069811817),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 2394894553572228419),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(54, 9218130673980506226),
    name: 'DeliveryDataEntity',
    lastPropertyId: const obx_int.IdUid(13, 6673957372490714795),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4906769591890609172),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 7358260089789875428),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 2258766517610321544),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 596307483188138072),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 4144876367608462754),
        name: 'customerId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(50, 6729783580412313614),
        relationTarget: 'CustomerDataModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 7624508358227969655),
        name: 'invoiceId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(51, 492352135283157291),
        relationTarget: 'InvoiceDataModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 1632832920146205993),
        name: 'tripId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(52, 2056104230444902586),
        relationTarget: 'TripModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 8871873741572861845),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 8058838556045378331),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 5289778272447002516),
        name: 'hasTrip',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 7509367947342390876),
        name: 'paymentMode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 6046998802875835427),
        name: 'deliveryNumber',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 6673957372490714795),
        name: 'totalDeliveryTime',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[
      obx_int.ModelRelation(
        id: const obx_int.IdUid(45, 7445309286868354680),
        name: 'deliveryUpdates',
        targetId: const obx_int.IdUid(6, 3030380395827557545),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(49, 8890252336964719573),
        name: 'invoiceItems',
        targetId: const obx_int.IdUid(61, 2520708785790055940),
      ),
    ],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(55, 8423633885083896888),
    name: 'DeliveryDataModel',
    lastPropertyId: const obx_int.IdUid(6, 2998275801690102624),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 7522337741825164044),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 6641313370538388014),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 3352908740349422317),
        name: 'tripId',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(56, 5750131685428495714),
    name: 'DeliveryVehicleEntity',
    lastPropertyId: const obx_int.IdUid(13, 9168803752813950564),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 5518541338824228705),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 4929378817223943174),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 8059202892796599178),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 3261140737103521717),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 1772163597076679941),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 6779520887551228619),
        name: 'plateNo',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 6087083418364663896),
        name: 'make',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 7229224855281799484),
        name: 'type',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 3393610763414408528),
        name: 'wheels',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 3387518068581453663),
        name: 'volumeCapacity',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 7292686564216911093),
        name: 'weightCapacity',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 2135988521692038103),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 9168803752813950564),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(57, 3735904064588148309),
    name: 'DeliveryVehicleModel',
    lastPropertyId: const obx_int.IdUid(3, 6792997228860389736),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2474681307724591512),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 2827071663528713181),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 6792997228860389736),
        name: 'tripId',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(58, 8584941869586890365),
    name: 'InvoiceDataEntity',
    lastPropertyId: const obx_int.IdUid(13, 5572719738333128348),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 5101684925978890544),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 2542747618580257275),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 8035055846937843930),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 767250777745036707),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 6334293822355052885),
        name: 'refId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 2112697575659830225),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 7242760466736211814),
        name: 'documentDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 5098139640876201423),
        name: 'totalAmount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 7168374071322422523),
        name: 'volume',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 1250326509221853815),
        name: 'weight',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 1164927965649940950),
        name: 'customerId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(55, 1848184781269476166),
        relationTarget: 'CustomerDataEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 4852356324185017037),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 5572719738333128348),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(59, 6569961212987627256),
    name: 'InvoiceDataModel',
    lastPropertyId: const obx_int.IdUid(2, 8084006730648569459),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 7494899090446384552),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 8084006730648569459),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(60, 5456379962994459273),
    name: 'InvoiceItemsEntity',
    lastPropertyId: const obx_int.IdUid(15, 3414312128542141691),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 179043112874821257),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 4305297166253711783),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 3804502667656079011),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 2701084778700999211),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 8364468300915529965),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 6309471862630726220),
        name: 'brand',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 8651610507598912609),
        name: 'refId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 6772083183977711807),
        name: 'uom',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 9204825723787185791),
        name: 'quantity',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 7379891928036427625),
        name: 'totalBaseQuantity',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 6580548185888550421),
        name: 'uomPrice',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 7974847257541097050),
        name: 'totalAmount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 157734064135979928),
        name: 'invoiceDataId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(56, 7508340840242053858),
        relationTarget: 'InvoiceDataEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 7664984616937522348),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(15, 3414312128542141691),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(61, 2520708785790055940),
    name: 'InvoiceItemsModel',
    lastPropertyId: const obx_int.IdUid(3, 4978533290324364066),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 8801701441009767215),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 7984252080888224103),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 4978533290324364066),
        name: 'invoiceDataId',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(62, 6696027886578843082),
    name: 'CancelledInvoiceEntity',
    lastPropertyId: const obx_int.IdUid(11, 9211212812383505369),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 6016276785470579852),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 911468149428682187),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 5645730998315508244),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 6533963536204622638),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 1049086707635307859),
        name: 'deliveryDataId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(73, 2268301001151602922),
        relationTarget: 'DeliveryDataModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 4000085788755296544),
        name: 'tripId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(74, 3578485567881505030),
        relationTarget: 'TripModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 5741995476175580629),
        name: 'image',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 8744520221355629524),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 2544935811426072395),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 673659440479412154),
        name: 'customerId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(104, 362057801517326832),
        relationTarget: 'CustomerDataModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 9211212812383505369),
        name: 'invoiceId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(105, 6404571701268891173),
        relationTarget: 'InvoiceDataModel',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(63, 8492922918573989072),
    name: 'CancelledInvoiceModel',
    lastPropertyId: const obx_int.IdUid(6, 6388257097833933823),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 5359998800618440528),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 815476487805924351),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 4012930170989795794),
        name: 'deliveryDataId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 7204035059790858290),
        name: 'tripId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 8381234087228022510),
        name: 'customerId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 6388257097833933823),
        name: 'invoiceId',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(64, 4019554688609507216),
    name: 'CollectionEntity',
    lastPropertyId: const obx_int.IdUid(11, 498185478058447605),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 3075379124216933668),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 718171142003326428),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 4086904969161824294),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1259010254478584075),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 7309128930852689225),
        name: 'deliveryDataId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(75, 2510826988125649135),
        relationTarget: 'DeliveryDataModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 5041223312496557639),
        name: 'tripId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(76, 5259988568133545514),
        relationTarget: 'TripModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 51367333003224312),
        name: 'totalAmount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 7094512690254242496),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 2318097404791678608),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 8905344570507788371),
        name: 'customerId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(106, 1553761506678957010),
        relationTarget: 'CustomerDataModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 498185478058447605),
        name: 'invoiceId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(107, 45131630434287320),
        relationTarget: 'InvoiceDataModel',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(65, 4826906273048525394),
    name: 'CollectionModel',
    lastPropertyId: const obx_int.IdUid(6, 5061264034473684791),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 37688900503369350),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 922268717945401595),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 904777158917823705),
        name: 'deliveryDataId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 4543480027854611254),
        name: 'tripId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 6604342347755008534),
        name: 'customerId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 5061264034473684791),
        name: 'invoiceId',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(66, 5369113908483710527),
    name: 'DeliveryReceiptEntity',
    lastPropertyId: const obx_int.IdUid(14, 1322378065497598722),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2828724549444558229),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 3871630763802832070),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 1884981731332442006),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 2666198938965664148),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 6239827665897272987),
        name: 'tripId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(77, 5388113584819944273),
        relationTarget: 'TripModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 7622812748898939351),
        name: 'deliveryDataId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(78, 3613385546501454754),
        relationTarget: 'DeliveryDataModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 7738367120852075695),
        name: 'status',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 6987594248542423449),
        name: 'dateTimeCompleted',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 3963222541239776041),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 8655890687803461364),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 9205865162335605476),
        name: 'customerImages',
        type: 30,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 7353811758378347702),
        name: 'customerSignature',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 8429985021512645349),
        name: 'receiptFile',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 1322378065497598722),
        name: 'totalAmount',
        type: 8,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(67, 4289851035742724734),
    name: 'DeliveryReceiptItemsEntity',
    lastPropertyId: const obx_int.IdUid(11, 8534009607210679578),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 960985303543964902),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 3589750516837685247),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 5159040245389744519),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 5742247946431043013),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 8131792983990183952),
        name: 'deliveryReceiptId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(79, 2239231746914140117),
        relationTarget: 'DeliveryReceiptModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 3729177002167302672),
        name: 'status',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 6619690206865098034),
        name: 'totalAmount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 695027353661576594),
        name: 'customerImage',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 2073245836900552129),
        name: 'receiptFile',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 1879915831534771554),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 8534009607210679578),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[
      obx_int.ModelRelation(
        id: const obx_int.IdUid(48, 9064645761870730284),
        name: 'invoiceItems',
        targetId: const obx_int.IdUid(61, 2520708785790055940),
      ),
    ],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(68, 5958189581756342264),
    name: 'DeliveryReceiptItemsModel',
    lastPropertyId: const obx_int.IdUid(3, 7346969639673212711),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 5616679355631951999),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 1255772515846782877),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 7346969639673212711),
        name: 'deliveryReceiptId',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(69, 5638905333969246812),
    name: 'DeliveryReceiptModel',
    lastPropertyId: const obx_int.IdUid(6, 7139364902655718745),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 9122143144950536211),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 2800682189094504379),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 1126613588922829686),
        name: 'tripId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 2327992606865351910),
        name: 'deliveryDataId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 8799920658252251874),
        name: 'customerImagesString',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 7139364902655718745),
        name: 'customerImages',
        type: 30,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(70, 6479783549970940169),
    name: 'ReturnItemsEntity',
    lastPropertyId: const obx_int.IdUid(13, 7295034867755324763),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 8382758819123203771),
        name: 'dbId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 1621906261954409005),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 3356235032628822890),
        name: 'collectionId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 4781598445333716715),
        name: 'collectionName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 7954259085956512029),
        name: 'tripId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(124, 8209766669906924453),
        relationTarget: 'TripModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 3253875228766539923),
        name: 'deliveryDataId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(125, 5472937549113458966),
        relationTarget: 'DeliveryDataModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 6119117531245627649),
        name: 'invoiceItemId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(126, 8417569755727327156),
        relationTarget: 'InvoiceItemsModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 3005488892675054688),
        name: 'invoiceDataId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(127, 4963583739483190802),
        relationTarget: 'InvoiceDataModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 1216141050218175370),
        name: 'refId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 6573874257112704081),
        name: 'quantity',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 7707995984966269711),
        name: 'uom',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 601389943062901165),
        name: 'created',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 7295034867755324763),
        name: 'updated',
        type: 10,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(71, 1727574566052977972),
    name: 'ReturnItemsModel',
    lastPropertyId: const obx_int.IdUid(3, 7244768276797261303),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 6315903562355532096),
        name: 'objectBoxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 1799277539243780407),
        name: 'pocketbaseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 7244768276797261303),
        name: 'tripId',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore({
  String? directory,
  int? maxDBSizeInKB,
  int? maxDataSizeInKB,
  int? fileMode,
  int? maxReaders,
  bool queriesCaseSensitiveDefault = true,
  String? macosApplicationGroup,
}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(
    getObjectBoxModel(),
    directory: directory ?? (await defaultStoreDirectory()).path,
    maxDBSizeInKB: maxDBSizeInKB,
    maxDataSizeInKB: maxDataSizeInKB,
    fileMode: fileMode,
    maxReaders: maxReaders,
    queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
    macosApplicationGroup: macosApplicationGroup,
  );
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
    entities: _entities,
    lastEntityId: const obx_int.IdUid(71, 1727574566052977972),
    lastIndexId: const obx_int.IdUid(127, 4963583739483190802),
    lastRelationId: const obx_int.IdUid(49, 8890252336964719573),
    lastSequenceId: const obx_int.IdUid(0, 0),
    retiredEntityUids: const [
      1709191995835174192,
      5647878385979291019,
      6731247264778152736,
      2458712594399542542,
      3107077524193027026,
      5955780460900690118,
      8194473631824528840,
      116420218591968259,
      1767132873335522797,
      2135318920905868119,
      572117866772752744,
      1402609585364815748,
      7120148567131405051,
      2810982542403258041,
      6624942406754561090,
      5432582490327826448,
      813909493096520087,
      2593343718872205124,
      6887281950365048680,
      1636938665827161760,
      2117216250781186987,
      8325197092071778196,
      2222338414731561434,
      5190367765380256665,
      4702232932726113116,
      1498007900983199816,
      8984387025797531191,
    ],
    retiredIndexUids: const [
      2981830705100883060,
      2782803977680333148,
      6300437396902348039,
      4041501902131753704,
      8777982949646307272,
      7024515020805388727,
      5590631857740543101,
      5824002030703593085,
      935312474712296861,
      4446192239018063099,
      1394205174110905009,
      899601815778169880,
      6079813195697612926,
      7657596910129447497,
      1886208561651737779,
      938783085154942789,
      7764234828199311654,
      3402456903208139476,
      12771229517713532,
      3730222485602799089,
      6172864948547412323,
      4720663995748975221,
      6429149503988953500,
      8526261447759437205,
      1731107271344601681,
      518642663306885988,
      9151995988484559211,
      4403320217953853729,
      1726970402077863884,
      2852350600320815169,
      857558378186194142,
      5535485596900826500,
      8129482255202537649,
      6908958383296806346,
      7932569622179544317,
      4586169951709319616,
      5876197726705580579,
      4350617180197170491,
      4618938960140997394,
      7865768950632988384,
      5849448005371519222,
      6216503592579678999,
      2929868313853451577,
      8392113346002922573,
      1572312363836999092,
      8813127732259371883,
      5911969113098242606,
      3943932802148224205,
      4687192535655085016,
      5513443102488682930,
      5231495607980221658,
      5250439930599153631,
      4739623102102877132,
      66366586473896345,
      5919243101713377994,
      1361690439118438072,
      7272566313916276180,
      7661187329471132209,
      8141262806335892232,
      4313790059035887863,
      8559553551552707379,
      7597268288597430123,
      7516783137746932816,
      6165004111790533116,
      130617342430599913,
      6693967078919351563,
      8409512806390582317,
      4825664026656140278,
      5476341418432294988,
    ],
    retiredPropertyUids: const [
      3346502891055187729,
      1009332994863935659,
      2324303722038017820,
      7788635126355027900,
      7334760455591202468,
      8381667705519424013,
      2710477333633267407,
      3055896665825880636,
      4678345076338164646,
      7001435660534463531,
      3371026510439087837,
      5329373544729784361,
      3324814194881990742,
      7899912214650689887,
      3520683897252299998,
      5756124573361889393,
      4736890772351912530,
      1556138099246924859,
      5777588314242894772,
      1515482504621780335,
      6695954596118044804,
      4688492044640008953,
      7864172107054097804,
      153098866840512948,
      1017756023256924244,
      733073798972306696,
      8649563819024543426,
      5026498849414778679,
      4923944400873830152,
      8964901702785174985,
      2591008408372236149,
      2833951936164225068,
      3105786280374445439,
      3234456093933637888,
      623759477716576776,
      5884932740389322811,
      1499446022435534747,
      9049041803453357739,
      2896878176954484620,
      4674086858133167844,
      6635358543995513750,
      2057975570452214727,
      6696659810550947331,
      2673370692750713040,
      2452258425451218631,
      1660829942871227289,
      2481549374181021520,
      2647248119636072139,
      3123785702483572634,
      7708327547631968643,
      6986507959279631750,
      6854176634043208467,
      636066565857395264,
      7514130931921951299,
      956767886241436992,
      9059613739051651735,
      3954239300359103519,
      8456539975188843360,
      7855429121177003935,
      3814657222248468385,
      118867138343753619,
      3617129722980667683,
      6100680245733313644,
      3988289524928837905,
      7220003368912499423,
      7591981076327796786,
      6865162061090837420,
      874109652006675219,
      3307256693058695743,
      8689131560753511824,
      7383993059172374117,
      1555406793455982899,
      6714374928200089591,
      3042412625847487470,
      3123422852844259364,
      7266098996974810707,
      6886073076169604887,
      3429347792345719564,
      9131168568839693837,
      4670377013173472518,
      6194329686129516474,
      8211050437118544391,
      6926303013006571764,
      1181701315522890829,
      6912351668832820101,
      4960961578336605968,
      5792604516464607618,
      4905934325953802439,
      2586529332979243720,
      5861714207120707011,
      1873158772802680681,
      5084572190381757332,
      7748044255256174871,
      7972348241275475002,
      1261572913212912961,
      6761708035171457004,
      2634043966613139471,
      7720841438373947280,
      6206971940003050337,
      7542721183222484098,
      155822766592974440,
      8496483455969129505,
      2178731346099788232,
      6221411334446485428,
      2051736087611920237,
      8091250733894021936,
      8424877247173309892,
      5936290088340059749,
      3401469890485481111,
      90345078465889098,
      8570110506833708183,
      9152837453747261590,
      6280043272279039033,
      1205345670970589924,
      7329503767436942265,
      2089832183961038400,
      4900112148274986884,
      5057066566090903305,
      3852867156292370197,
      2620484594183047470,
      1779482180990046958,
      5774607245411278659,
      5530847620210540319,
      3650136383948829499,
      6750117226059744954,
      8256360511733442188,
      3442425869725346823,
      6653769136411455134,
      5232249076290523924,
      5114193768578248515,
      869744572143142212,
      7966901206049272756,
      6761636637536665936,
      6066451446905563522,
      3666705536834561833,
      7294019686697303616,
      2568272940799886390,
      8668470884968752331,
      3017993733987945649,
      1642277713169861702,
      6846417587262951599,
      3248218099750963756,
      1687518482051146126,
      4092268054658678507,
      4679455853066371887,
      7193871567497624824,
      4037163148147848591,
      471256164172782859,
      3225561053691562279,
      8728538038950971971,
      7266365344229709032,
      7508193386524436699,
      2767468891706791322,
      1774270480587178987,
      1202246538480569000,
      3223422758391311674,
      6435739894853343272,
      3374035810299161816,
      9107479157367655135,
      267960583653816918,
      2633421765705684186,
      262455484447700793,
      3631673552392912539,
      1845631243407067851,
      8608845737309140413,
      4956262906346606043,
      5292948896455438928,
      2430809978846032528,
      7735096263462153087,
      6335579363066827439,
      4882081437172580607,
      3061032585647135624,
      2554901496995892810,
      8786142205816397975,
      8174398557175301547,
      4326647970592138593,
      7347651946967189121,
      2038198061276200161,
      5022564998890878109,
      3305357813724603285,
      5127278744056458213,
      8434655857806917917,
      4818737849281510032,
      1017119108737096578,
      5575952014722064126,
      4588130528760471343,
      8255311086692512601,
      8475649867718060193,
      4909422161419561195,
      493693054723217232,
      6075804939639433975,
      9148555850270000235,
      1734468122192002532,
      8712156239102596010,
      7019605952068996319,
      2947252145267312157,
      9086207744144734969,
      256582326921748728,
      1308393457313955946,
      5331664432725031139,
      4940556951321025223,
      5578967840659667487,
      1273653736147391768,
      5964088283253944682,
      7561021174642281097,
      4633115773106761011,
      2156627673242474335,
      621575398230288989,
      2839846883970833567,
      8138372410520429987,
      8497769358559599242,
      6683516220717541421,
      753938509431198301,
      5115470052619938283,
      2407621401099227263,
      5645589271456974710,
      3943047939382892239,
      4819292598439533012,
      81471854687097645,
      2894727471067594752,
      5841964243118193692,
      5708406590959690661,
      6209956281521035556,
      8824375292511182769,
      3002616149896201006,
      6876487194760412825,
      7179125411577599663,
      9218304528965443174,
      5053188798423684984,
      6365039277670865476,
      6521198168162998790,
      1849011463706792379,
      1222961001376872913,
      6623588558235138825,
      4797487283297426094,
      3274716364988500121,
      7500813721015562269,
      2016412316382749069,
      4617807091484509180,
      1664638640866434715,
      1310607178100257051,
      2751010279870765211,
      4249800905296480194,
      2541656314562760752,
      9183558434272641539,
      527796475590680333,
      7366984776947846670,
      3914332514906635095,
      1899462517382426399,
      6935080176359632810,
      8910130772582302120,
      8927908042961978708,
      5721957865069607072,
      6322027692736321227,
      9216643524753605112,
      6710299430894799167,
      6210998683546887611,
      6894276842539030329,
      4133114395883755979,
      105319028927879718,
      4191316215346017706,
      4989933997621522724,
      6686536332549314011,
      4839088005258446305,
      6406352966592152370,
      4647964431685183452,
      7398992804350638175,
      8502432387044699617,
      8789905355408153954,
      1449615058738359455,
      4880751019398108216,
      7919008357053089198,
      1905456188826770252,
      3193306949989739351,
      7915277020131883841,
      3874592165834909809,
      2254359110924808111,
      7465490325345930004,
      2015172529944872494,
      8543318595254771691,
      1864920782530861828,
      4522413966018009944,
      8797962648914788389,
      6900674462289497262,
      2265347942980778690,
      1159071939057965804,
      1930353276913245788,
      495942872694066139,
      302180669176230366,
      353255264519052879,
      8635794056678148942,
      4274432975179550722,
      9095531140116553685,
      2998275801690102624,
      1119544490582682879,
      6236750458352047417,
      3253882744375541347,
      8135099039353923812,
      3381536243504511229,
      45105488215685205,
      1018357521837095445,
      4087694502081403835,
      6474825060915434468,
      7363645517555672052,
      5420239464119476058,
      7303160245840236974,
      8812957164445977657,
      1045020115845912295,
      6043937121149023227,
      5866289250807945815,
      4473423505279939315,
      8091191658113377414,
      5143026906601448759,
      111157491964795591,
      886845633227859065,
      7862959537730988789,
      3792298513174971000,
      1369727991867701382,
      7602950538999883170,
      4657750512920984701,
      4765256920943358881,
      5957476963308025203,
      4804241814732810859,
      6558666286453278682,
      7391864432468285792,
      4991381980770158838,
      4848981102286286916,
      2252812235607604872,
      925197155801949221,
      7358673056707796553,
      2829182731243011253,
      6951871397512140651,
      6129570854454915775,
      7137774916926280362,
      7923803019541041321,
      8426379740425083318,
      296532642051237585,
      7335564331495633789,
      7126038900417777501,
      2801144532307129762,
      6325828076300386899,
      270983248864754213,
      6409336372386458699,
      5169533415623584624,
      6497842107553043055,
      7636815526717123652,
      6515989377128153678,
      634443315658693490,
      4194123572114620536,
      851112904590827220,
      8986910532050463210,
      9125521959038870111,
      2770902239759775903,
      4443279738750832096,
      5221032146910871289,
      2663816627981708346,
      3725358458194100352,
      2277412749602805915,
      6433142257288463011,
      7600171264578283543,
      7302890908149584229,
      4526406225289741230,
      8186774332665517874,
      5438979947531339030,
      9166228944783305484,
      5231326900758383552,
      6307766040921005380,
      344950642817430532,
      1827036462628612368,
      596861409252080956,
      2509549930219347946,
      7788696190495463391,
      1182637436290937352,
      3185695397029916180,
      7482434781887082599,
      7547398494399669109,
      9212230789388552615,
      4849920256823204710,
      6341109722109625035,
      5524543240484184771,
      510632936006348073,
      2236155664072012998,
      2935231896130179601,
      3913111527420347263,
      3851258104500491561,
      7955364885727961290,
      2221253742651843905,
      8974145915940495565,
      8186513145024983979,
      4369489657167608582,
      8222082613003819562,
      3440119017008134938,
      7240213920209634204,
      5225197093163286518,
      8768302685213339695,
      7159250174630514347,
      688633321144220225,
      7712354582157774445,
      20699139691494007,
      3257272905913404798,
      5966119542570929601,
      2054820229075353456,
      1354780863573015275,
      8352136082830244547,
      6308530438112771624,
      5654710875855817213,
      1442767062996121287,
      2616114769091067229,
      2978713147213114232,
      7733948270425816243,
      6096513534413029008,
      6909169449759179596,
      5029006026594443824,
      3149737445133335124,
      3285981560810214996,
      4292325636304599832,
      6509687678033297242,
      2428300827424217746,
      6459952616228590918,
      9163101723595439190,
      2081631122263565441,
      6006406697334212765,
      267814120063409867,
      7905683759712683842,
      6807520937482742362,
      8207918602700888103,
      8018805169024900810,
      9024996737942869157,
      7516508171733807906,
      4405439017711572684,
      2391120462549753352,
      1281672098929982405,
      9183796705152472307,
      2781752260426345470,
      5450074392613403862,
      2373140102148991748,
      5224150141613133736,
      655879933433011631,
      8356014716741193452,
      4853744715588708487,
      4489963106830340807,
      131988642879265621,
      3603718351566598495,
      8685509533717266954,
      2608369877185797316,
      7603402449542992811,
      3709584509802714636,
      4281595992971248849,
      7986841945518961124,
      8596900298846992208,
      1136157881071497442,
      7242929660127407819,
      6785323552713586580,
      2088534606867845567,
      1174106696378544901,
      4901481522986122322,
      2944343869770818756,
      7739883618297448780,
      2492853829283906299,
      7323883443322035507,
      7910129559602669704,
    ],
    retiredRelationUids: const [
      4626963580022962752,
      7952964050811186203,
      2572761830930501922,
      5657459460448516614,
      8176844965992326068,
      1966879051449128539,
      4390911173969797425,
      7705048988162586471,
      4036520657680791832,
      964408522493268961,
      4702156903672996872,
      3629441164168392802,
      768856214699475907,
      520418666464514115,
      1587644881745869281,
      2271626364931710282,
      9194901586609090214,
      5055001292096896164,
      1211522283703357965,
      7951814181348982632,
      4643822862643184357,
      8009148045859773887,
      7971742671112932770,
      2312004636728150997,
      863808831836037207,
      4081384640078222274,
    ],
    modelVersion: 5,
    modelVersionParserMinimum: 5,
    version: 1,
  );

  final bindings = <Type, obx_int.EntityDefinition>{
    LocalUser: obx_int.EntityDefinition<LocalUser>(
      model: _entities[0],
      toOneRelations: (LocalUser object) => [object.trip, object.deliveryTeam],
      toManyRelations: (LocalUser object) => {},
      getId: (LocalUser object) => object.dbId,
      setId: (LocalUser object, int id) {
        object.dbId = id;
      },
      objectToFB: (LocalUser object, fb.Builder fbb) {
        final emailOffset =
            object.email == null ? null : fbb.writeString(object.email!);
        final profilePicOffset =
            object.profilePic == null
                ? null
                : fbb.writeString(object.profilePic!);
        final nameOffset =
            object.name == null ? null : fbb.writeString(object.name!);
        final tripNumberIdOffset =
            object.tripNumberId == null
                ? null
                : fbb.writeString(object.tripNumberId!);
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        final tokenOffset =
            object.token == null ? null : fbb.writeString(object.token!);
        fbb.startTable(29);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(2, emailOffset);
        fbb.addOffset(3, profilePicOffset);
        fbb.addOffset(8, nameOffset);
        fbb.addOffset(9, tripNumberIdOffset);
        fbb.addOffset(21, idOffset);
        fbb.addOffset(22, collectionIdOffset);
        fbb.addOffset(23, collectionNameOffset);
        fbb.addInt64(24, object.trip.targetId);
        fbb.addInt64(25, object.deliveryTeam.targetId);
        fbb.addOffset(26, tokenOffset);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 46);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 48);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 50);
        final emailParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final profilePicParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 20);
        final tripNumberIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 22);
        final tokenParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 56);
        final object = LocalUser(
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          email: emailParam,
          profilePic: profilePicParam,
          name: nameParam,
          tripNumberId: tripNumberIdParam,
          token: tokenParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
        object.trip.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          52,
          0,
        );
        object.trip.attach(store);
        object.deliveryTeam.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          54,
          0,
        );
        object.deliveryTeam.attach(store);
        return object;
      },
    ),
    ChecklistEntity: obx_int.EntityDefinition<ChecklistEntity>(
      model: _entities[1],
      toOneRelations: (ChecklistEntity object) => [object.trip],
      toManyRelations: (ChecklistEntity object) => {},
      getId: (ChecklistEntity object) => object.dbId,
      setId: (ChecklistEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (ChecklistEntity object, fb.Builder fbb) {
        final idOffset = fbb.writeString(object.id);
        final objectNameOffset =
            object.objectName == null
                ? null
                : fbb.writeString(object.objectName!);
        final statusOffset =
            object.status == null ? null : fbb.writeString(object.status!);
        fbb.startTable(8);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, objectNameOffset);
        fbb.addBool(3, object.isChecked);
        fbb.addOffset(4, statusOffset);
        fbb.addInt64(5, object.timeCompleted?.millisecondsSinceEpoch);
        fbb.addInt64(6, object.trip.targetId);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final timeCompletedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          14,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final objectNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final isCheckedParam = const fb.BoolReader().vTableGetNullable(
          buffer,
          rootOffset,
          10,
        );
        final statusParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final timeCompletedParam =
            timeCompletedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(timeCompletedValue);
        final object = ChecklistEntity(
          id: idParam,
          objectName: objectNameParam,
          isChecked: isCheckedParam,
          status: statusParam,
          timeCompleted: timeCompletedParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
        object.trip.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          16,
          0,
        );
        object.trip.attach(store);
        return object;
      },
    ),
    ChecklistModel: obx_int.EntityDefinition<ChecklistModel>(
      model: _entities[2],
      toOneRelations: (ChecklistModel object) => [],
      toManyRelations: (ChecklistModel object) => {},
      getId: (ChecklistModel object) => object.objectBoxId,
      setId: (ChecklistModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (ChecklistModel object, fb.Builder fbb) {
        final tripIdOffset =
            object.tripId == null ? null : fbb.writeString(object.tripId!);
        final pocketBaseIdOffset =
            object.pocketBaseId == null
                ? null
                : fbb.writeString(object.pocketBaseId!);
        fbb.startTable(10);
        fbb.addInt64(5, object.objectBoxId);
        fbb.addOffset(6, tripIdOffset);
        fbb.addOffset(7, pocketBaseIdOffset);
        fbb.addBool(8, object.isChecked);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final isCheckedParam = const fb.BoolReader().vTableGetNullable(
          buffer,
          rootOffset,
          20,
        );
        final tripIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 16);
        final object =
            ChecklistModel(isChecked: isCheckedParam, tripId: tripIdParam)
              ..objectBoxId = const fb.Int64Reader().vTableGet(
                buffer,
                rootOffset,
                14,
                0,
              )
              ..pocketBaseId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 18);

        return object;
      },
    ),
    DeliveryUpdateEntity: obx_int.EntityDefinition<DeliveryUpdateEntity>(
      model: _entities[3],
      toOneRelations: (DeliveryUpdateEntity object) => [object.deliveryData],
      toManyRelations: (DeliveryUpdateEntity object) => {},
      getId: (DeliveryUpdateEntity object) => object.dbId,
      setId: (DeliveryUpdateEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (DeliveryUpdateEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        final titleOffset =
            object.title == null ? null : fbb.writeString(object.title!);
        final subtitleOffset =
            object.subtitle == null ? null : fbb.writeString(object.subtitle!);
        final customerOffset =
            object.customer == null ? null : fbb.writeString(object.customer!);
        final assignedToOffset =
            object.assignedTo == null
                ? null
                : fbb.writeString(object.assignedTo!);
        final imageOffset =
            object.image == null ? null : fbb.writeString(object.image!);
        final remarksOffset =
            object.remarks == null ? null : fbb.writeString(object.remarks!);
        fbb.startTable(16);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addOffset(4, titleOffset);
        fbb.addOffset(5, subtitleOffset);
        fbb.addInt64(6, object.time?.millisecondsSinceEpoch);
        fbb.addInt64(7, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(8, object.updated?.millisecondsSinceEpoch);
        fbb.addOffset(9, customerOffset);
        fbb.addBool(10, object.isAssigned);
        fbb.addOffset(11, assignedToOffset);
        fbb.addOffset(12, imageOffset);
        fbb.addOffset(13, remarksOffset);
        fbb.addInt64(14, object.deliveryData.targetId);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final timeValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          16,
        );
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          20,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final titleParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final subtitleParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final timeParam =
            timeValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(timeValue);
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final customerParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 22);
        final remarksParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 30);
        final imageParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 28);
        final isAssignedParam = const fb.BoolReader().vTableGetNullable(
          buffer,
          rootOffset,
          24,
        );
        final assignedToParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 26);
        final object = DeliveryUpdateEntity(
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          title: titleParam,
          subtitle: subtitleParam,
          time: timeParam,
          created: createdParam,
          updated: updatedParam,
          customer: customerParam,
          remarks: remarksParam,
          image: imageParam,
          isAssigned: isAssignedParam,
          assignedTo: assignedToParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
        object.deliveryData.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          32,
          0,
        );
        object.deliveryData.attach(store);
        return object;
      },
    ),
    DeliveryUpdateModel: obx_int.EntityDefinition<DeliveryUpdateModel>(
      model: _entities[4],
      toOneRelations: (DeliveryUpdateModel object) => [],
      toManyRelations: (DeliveryUpdateModel object) => {},
      getId: (DeliveryUpdateModel object) => object.objectBoxId,
      setId: (DeliveryUpdateModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (DeliveryUpdateModel object, fb.Builder fbb) {
        final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
        final customerOffset =
            object.customer == null ? null : fbb.writeString(object.customer!);
        fbb.startTable(16);
        fbb.addInt64(12, object.objectBoxId);
        fbb.addOffset(13, pocketbaseIdOffset);
        fbb.addOffset(14, customerOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final customerParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 32);
        final object =
            DeliveryUpdateModel(customer: customerParam)
              ..objectBoxId = const fb.Int64Reader().vTableGet(
                buffer,
                rootOffset,
                28,
                0,
              )
              ..pocketbaseId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 30, '');

        return object;
      },
    ),
    PersonelEntity: obx_int.EntityDefinition<PersonelEntity>(
      model: _entities[5],
      toOneRelations:
          (PersonelEntity object) => [object.deliveryTeam, object.trip],
      toManyRelations: (PersonelEntity object) => {},
      getId: (PersonelEntity object) => object.dbId,
      setId: (PersonelEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (PersonelEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        final nameOffset =
            object.name == null ? null : fbb.writeString(object.name!);
        fbb.startTable(10);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addOffset(4, nameOffset);
        fbb.addInt64(5, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(6, object.updated?.millisecondsSinceEpoch);
        fbb.addInt64(7, object.deliveryTeam.targetId);
        fbb.addInt64(8, object.trip.targetId);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          14,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          16,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final object = PersonelEntity(
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          name: nameParam,
          created: createdParam,
          updated: updatedParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
        object.deliveryTeam.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          18,
          0,
        );
        object.deliveryTeam.attach(store);
        object.trip.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          20,
          0,
        );
        object.trip.attach(store);
        return object;
      },
    ),
    PersonelModel: obx_int.EntityDefinition<PersonelModel>(
      model: _entities[6],
      toOneRelations: (PersonelModel object) => [],
      toManyRelations: (PersonelModel object) => {},
      getId: (PersonelModel object) => object.objectBoxId,
      setId: (PersonelModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (PersonelModel object, fb.Builder fbb) {
        final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
        final tripIdOffset =
            object.tripId == null ? null : fbb.writeString(object.tripId!);
        final deliveryTeamIdOffset =
            object.deliveryTeamId == null
                ? null
                : fbb.writeString(object.deliveryTeamId!);
        fbb.startTable(12);
        fbb.addInt64(7, object.objectBoxId);
        fbb.addOffset(8, pocketbaseIdOffset);
        fbb.addOffset(9, tripIdOffset);
        fbb.addOffset(10, deliveryTeamIdOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final tripIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 22);
        final deliveryTeamIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 24);
        final object =
            PersonelModel(
                tripId: tripIdParam,
                deliveryTeamId: deliveryTeamIdParam,
              )
              ..objectBoxId = const fb.Int64Reader().vTableGet(
                buffer,
                rootOffset,
                18,
                0,
              )
              ..pocketbaseId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 20, '');

        return object;
      },
    ),
    TripEntity: obx_int.EntityDefinition<TripEntity>(
      model: _entities[7],
      toOneRelations:
          (TripEntity object) => [
            object.timeline,
            object.deliveryTeam,
            object.otp,
            object.endTripOtp,
            object.user,
            object.deliveryVehicle,
          ],
      toManyRelations:
          (TripEntity object) => {
            obx_int.RelInfo<TripEntity>.toMany(8, object.dbId):
                object.personels,
            obx_int.RelInfo<TripEntity>.toMany(9, object.dbId):
                object.checklist,
            obx_int.RelInfo<TripEntity>.toMany(19, object.dbId): object.vehicle,
            obx_int.RelInfo<TripEntity>.toMany(41, object.dbId):
                object.endTripChecklist,
            obx_int.RelInfo<TripEntity>.toMany(43, object.dbId):
                object.tripUpdates,
            obx_int.RelInfo<TripEntity>.toMany(46, object.dbId):
                object.deliveryData,
          },
      getId: (TripEntity object) => object.dbId,
      setId: (TripEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (TripEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        final tripNumberIdOffset =
            object.tripNumberId == null
                ? null
                : fbb.writeString(object.tripNumberId!);
        final totalTripDistanceOffset =
            object.totalTripDistance == null
                ? null
                : fbb.writeString(object.totalTripDistance!);
        final qrCodeOffset =
            object.qrCode == null ? null : fbb.writeString(object.qrCode!);
        fbb.startTable(23);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addOffset(4, tripNumberIdOffset);
        fbb.addInt64(5, object.timeline.targetId);
        fbb.addBool(7, object.isAccepted);
        fbb.addInt64(8, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(9, object.updated?.millisecondsSinceEpoch);
        fbb.addInt64(10, object.timeAccepted?.millisecondsSinceEpoch);
        fbb.addInt64(11, object.deliveryTeam.targetId);
        fbb.addInt64(12, object.otp.targetId);
        fbb.addInt64(13, object.endTripOtp.targetId);
        fbb.addBool(14, object.isEndTrip);
        fbb.addInt64(15, object.timeEndTrip?.millisecondsSinceEpoch);
        fbb.addOffset(16, totalTripDistanceOffset);
        fbb.addOffset(17, qrCodeOffset);
        fbb.addInt64(18, object.user.targetId);
        fbb.addFloat64(19, object.latitude);
        fbb.addFloat64(20, object.longitude);
        fbb.addInt64(21, object.deliveryVehicle.targetId);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          20,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          22,
        );
        final timeAcceptedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          24,
        );
        final timeEndTripValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          34,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final tripNumberIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final latitudeParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          42,
        );
        final longitudeParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          44,
        );
        final totalTripDistanceParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 36);
        final timeEndTripParam =
            timeEndTripValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(timeEndTripValue);
        final isEndTripParam = const fb.BoolReader().vTableGetNullable(
          buffer,
          rootOffset,
          32,
        );
        final timeAcceptedParam =
            timeAcceptedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(timeAcceptedValue);
        final isAcceptedParam = const fb.BoolReader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final qrCodeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 38);
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final object = TripEntity(
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          tripNumberId: tripNumberIdParam,
          latitude: latitudeParam,
          longitude: longitudeParam,
          totalTripDistance: totalTripDistanceParam,
          timeEndTrip: timeEndTripParam,
          isEndTrip: isEndTripParam,
          timeAccepted: timeAcceptedParam,
          isAccepted: isAcceptedParam,
          qrCode: qrCodeParam,
          created: createdParam,
          updated: updatedParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
        object.timeline.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          14,
          0,
        );
        object.timeline.attach(store);
        object.deliveryTeam.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          26,
          0,
        );
        object.deliveryTeam.attach(store);
        object.otp.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          28,
          0,
        );
        object.otp.attach(store);
        object.endTripOtp.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          30,
          0,
        );
        object.endTripOtp.attach(store);
        object.user.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          40,
          0,
        );
        object.user.attach(store);
        object.deliveryVehicle.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          46,
          0,
        );
        object.deliveryVehicle.attach(store);
        obx_int.InternalToManyAccess.setRelInfo<TripEntity>(
          object.personels,
          store,
          obx_int.RelInfo<TripEntity>.toMany(8, object.dbId),
        );
        obx_int.InternalToManyAccess.setRelInfo<TripEntity>(
          object.checklist,
          store,
          obx_int.RelInfo<TripEntity>.toMany(9, object.dbId),
        );
        obx_int.InternalToManyAccess.setRelInfo<TripEntity>(
          object.vehicle,
          store,
          obx_int.RelInfo<TripEntity>.toMany(19, object.dbId),
        );
        obx_int.InternalToManyAccess.setRelInfo<TripEntity>(
          object.endTripChecklist,
          store,
          obx_int.RelInfo<TripEntity>.toMany(41, object.dbId),
        );
        obx_int.InternalToManyAccess.setRelInfo<TripEntity>(
          object.tripUpdates,
          store,
          obx_int.RelInfo<TripEntity>.toMany(43, object.dbId),
        );
        obx_int.InternalToManyAccess.setRelInfo<TripEntity>(
          object.deliveryData,
          store,
          obx_int.RelInfo<TripEntity>.toMany(46, object.dbId),
        );
        return object;
      },
    ),
    TripModel: obx_int.EntityDefinition<TripModel>(
      model: _entities[8],
      toOneRelations: (TripModel object) => [],
      toManyRelations: (TripModel object) => {},
      getId: (TripModel object) => object.objectBoxId,
      setId: (TripModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (TripModel object, fb.Builder fbb) {
        final pocketbaseIdOffset =
            object.pocketbaseId == null
                ? null
                : fbb.writeString(object.pocketbaseId!);
        fbb.startTable(13);
        fbb.addInt64(10, object.objectBoxId);
        fbb.addOffset(11, pocketbaseIdOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final objectBoxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          24,
          0,
        );
        final object = TripModel(objectBoxId: objectBoxIdParam)
          ..pocketbaseId = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 26);

        return object;
      },
    ),
    UpdateTimelineEntity: obx_int.EntityDefinition<UpdateTimelineEntity>(
      model: _entities[9],
      toOneRelations: (UpdateTimelineEntity object) => [],
      toManyRelations: (UpdateTimelineEntity object) => {},
      getId: (UpdateTimelineEntity object) => object.dbId,
      setId: (UpdateTimelineEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (UpdateTimelineEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        fbb.startTable(7);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addInt64(4, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(5, object.updated?.millisecondsSinceEpoch);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          12,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          14,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final object = UpdateTimelineEntity(
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          created: createdParam,
          updated: updatedParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

        return object;
      },
    ),
    UpdateTimelineModel: obx_int.EntityDefinition<UpdateTimelineModel>(
      model: _entities[10],
      toOneRelations: (UpdateTimelineModel object) => [],
      toManyRelations: (UpdateTimelineModel object) => {},
      getId: (UpdateTimelineModel object) => object.dbId,
      setId: (UpdateTimelineModel object, int id) {
        object.dbId = id;
      },
      objectToFB: (UpdateTimelineModel object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        fbb.startTable(7);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addInt64(4, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(5, object.updated?.millisecondsSinceEpoch);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          12,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          14,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final object = UpdateTimelineModel(
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          created: createdParam,
          updated: updatedParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

        return object;
      },
    ),
    VehicleEntity: obx_int.EntityDefinition<VehicleEntity>(
      model: _entities[11],
      toOneRelations:
          (VehicleEntity object) => [object.deliveryTeam, object.trip],
      toManyRelations: (VehicleEntity object) => {},
      getId: (VehicleEntity object) => object.dbId,
      setId: (VehicleEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (VehicleEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        final vehicleNameOffset =
            object.vehicleName == null
                ? null
                : fbb.writeString(object.vehicleName!);
        final vehiclePlateNumberOffset =
            object.vehiclePlateNumber == null
                ? null
                : fbb.writeString(object.vehiclePlateNumber!);
        final vehicleTypeOffset =
            object.vehicleType == null
                ? null
                : fbb.writeString(object.vehicleType!);
        fbb.startTable(12);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addOffset(4, vehicleNameOffset);
        fbb.addOffset(5, vehiclePlateNumberOffset);
        fbb.addOffset(6, vehicleTypeOffset);
        fbb.addInt64(7, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(8, object.updated?.millisecondsSinceEpoch);
        fbb.addInt64(9, object.deliveryTeam.targetId);
        fbb.addInt64(10, object.trip.targetId);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          20,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final vehicleNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final vehiclePlateNumberParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final vehicleTypeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 16);
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final object = VehicleEntity(
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          vehicleName: vehicleNameParam,
          vehiclePlateNumber: vehiclePlateNumberParam,
          vehicleType: vehicleTypeParam,
          created: createdParam,
          updated: updatedParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
        object.deliveryTeam.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          22,
          0,
        );
        object.deliveryTeam.attach(store);
        object.trip.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          24,
          0,
        );
        object.trip.attach(store);
        return object;
      },
    ),
    VehicleModel: obx_int.EntityDefinition<VehicleModel>(
      model: _entities[12],
      toOneRelations: (VehicleModel object) => [],
      toManyRelations: (VehicleModel object) => {},
      getId: (VehicleModel object) => object.objectBoxId,
      setId: (VehicleModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (VehicleModel object, fb.Builder fbb) {
        final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
        final tripIdOffset =
            object.tripId == null ? null : fbb.writeString(object.tripId!);
        final deliveryTeamIdOffset =
            object.deliveryTeamId == null
                ? null
                : fbb.writeString(object.deliveryTeamId!);
        fbb.startTable(14);
        fbb.addInt64(9, object.objectBoxId);
        fbb.addOffset(10, pocketbaseIdOffset);
        fbb.addOffset(11, tripIdOffset);
        fbb.addOffset(12, deliveryTeamIdOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final tripIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 26);
        final deliveryTeamIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 28);
        final object =
            VehicleModel(
                tripId: tripIdParam,
                deliveryTeamId: deliveryTeamIdParam,
              )
              ..objectBoxId = const fb.Int64Reader().vTableGet(
                buffer,
                rootOffset,
                22,
                0,
              )
              ..pocketbaseId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 24, '');

        return object;
      },
    ),
    DeliveryTeamEntity: obx_int.EntityDefinition<DeliveryTeamEntity>(
      model: _entities[13],
      toOneRelations:
          (DeliveryTeamEntity object) => [object.trip, object.deliveryVehicle],
      toManyRelations:
          (DeliveryTeamEntity object) => {
            obx_int.RelInfo<DeliveryTeamEntity>.toMany(13, object.dbId):
                object.personels,
            obx_int.RelInfo<DeliveryTeamEntity>.toMany(14, object.dbId):
                object.checklist,
            obx_int.RelInfo<DeliveryTeamEntity>.toMany(20, object.dbId):
                object.vehicle,
          },
      getId: (DeliveryTeamEntity object) => object.dbId,
      setId: (DeliveryTeamEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (DeliveryTeamEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        fbb.startTable(15);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addInt64(6, object.activeDeliveries);
        fbb.addInt64(7, object.totalDelivered);
        fbb.addFloat64(8, object.totalDistanceTravelled);
        fbb.addInt64(9, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(10, object.updated?.millisecondsSinceEpoch);
        fbb.addInt64(11, object.undeliveredCustomers);
        fbb.addInt64(12, object.trip.targetId);
        fbb.addInt64(13, object.deliveryVehicle.targetId);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          22,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          24,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final activeDeliveriesParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          16,
        );
        final totalDeliveredParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final undeliveredCustomersParam = const fb.Int64Reader()
            .vTableGetNullable(buffer, rootOffset, 26);
        final totalDistanceTravelledParam = const fb.Float64Reader()
            .vTableGetNullable(buffer, rootOffset, 20);
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final object = DeliveryTeamEntity(
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          activeDeliveries: activeDeliveriesParam,
          totalDelivered: totalDeliveredParam,
          undeliveredCustomers: undeliveredCustomersParam,
          totalDistanceTravelled: totalDistanceTravelledParam,
          created: createdParam,
          updated: updatedParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
        object.trip.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          28,
          0,
        );
        object.trip.attach(store);
        object.deliveryVehicle.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          30,
          0,
        );
        object.deliveryVehicle.attach(store);
        obx_int.InternalToManyAccess.setRelInfo<DeliveryTeamEntity>(
          object.personels,
          store,
          obx_int.RelInfo<DeliveryTeamEntity>.toMany(13, object.dbId),
        );
        obx_int.InternalToManyAccess.setRelInfo<DeliveryTeamEntity>(
          object.checklist,
          store,
          obx_int.RelInfo<DeliveryTeamEntity>.toMany(14, object.dbId),
        );
        obx_int.InternalToManyAccess.setRelInfo<DeliveryTeamEntity>(
          object.vehicle,
          store,
          obx_int.RelInfo<DeliveryTeamEntity>.toMany(20, object.dbId),
        );
        return object;
      },
    ),
    OtpModel: obx_int.EntityDefinition<OtpModel>(
      model: _entities[14],
      toOneRelations: (OtpModel object) => [object.trip],
      toManyRelations: (OtpModel object) => {},
      getId: (OtpModel object) => object.dbId,
      setId: (OtpModel object, int id) {
        object.dbId = id;
      },
      objectToFB: (OtpModel object, fb.Builder fbb) {
        final idOffset = fbb.writeString(object.id);
        final otpCodeOffset = fbb.writeString(object.otpCode);
        final generatedCodeOffset =
            object.generatedCode == null
                ? null
                : fbb.writeString(object.generatedCode!);
        fbb.startTable(10);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, otpCodeOffset);
        fbb.addOffset(3, generatedCodeOffset);
        fbb.addBool(4, object.isVerified);
        fbb.addInt64(5, object.createdAt.millisecondsSinceEpoch);
        fbb.addInt64(6, object.expiresAt.millisecondsSinceEpoch);
        fbb.addInt64(7, object.verifiedAt?.millisecondsSinceEpoch);
        fbb.addInt64(8, object.trip.targetId);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final verifiedAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final otpCodeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final generatedCodeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final isVerifiedParam = const fb.BoolReader().vTableGet(
          buffer,
          rootOffset,
          12,
          false,
        );
        final createdAtParam = DateTime.fromMillisecondsSinceEpoch(
          const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0),
        );
        final expiresAtParam = DateTime.fromMillisecondsSinceEpoch(
          const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0),
        );
        final verifiedAtParam =
            verifiedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(verifiedAtValue);
        final object = OtpModel(
          id: idParam,
          otpCode: otpCodeParam,
          generatedCode: generatedCodeParam,
          isVerified: isVerifiedParam,
          createdAt: createdAtParam,
          expiresAt: expiresAtParam,
          verifiedAt: verifiedAtParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
        object.trip.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          20,
          0,
        );
        object.trip.attach(store);
        return object;
      },
    ),
    LocalUsersModel: obx_int.EntityDefinition<LocalUsersModel>(
      model: _entities[15],
      toOneRelations: (LocalUsersModel object) => [],
      toManyRelations: (LocalUsersModel object) => {},
      getId: (LocalUsersModel object) => object.objectBoxId,
      setId: (LocalUsersModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (LocalUsersModel object, fb.Builder fbb) {
        final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
        final tripIdOffset =
            object.tripId == null ? null : fbb.writeString(object.tripId!);
        final deliveryTeamIdOffset =
            object.deliveryTeamId == null
                ? null
                : fbb.writeString(object.deliveryTeamId!);
        final tokenOffset =
            object.token == null ? null : fbb.writeString(object.token!);
        fbb.startTable(27);
        fbb.addInt64(21, object.objectBoxId);
        fbb.addOffset(22, pocketbaseIdOffset);
        fbb.addOffset(23, tripIdOffset);
        fbb.addOffset(24, deliveryTeamIdOffset);
        fbb.addOffset(25, tokenOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final tripIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 50);
        final deliveryTeamIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 52);
        final tokenParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 54);
        final object =
            LocalUsersModel(
                tripId: tripIdParam,
                deliveryTeamId: deliveryTeamIdParam,
                token: tokenParam,
              )
              ..objectBoxId = const fb.Int64Reader().vTableGet(
                buffer,
                rootOffset,
                46,
                0,
              )
              ..pocketbaseId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 48, '');

        return object;
      },
    ),
    DeliveryTeamModel: obx_int.EntityDefinition<DeliveryTeamModel>(
      model: _entities[16],
      toOneRelations: (DeliveryTeamModel object) => [],
      toManyRelations: (DeliveryTeamModel object) => {},
      getId: (DeliveryTeamModel object) => object.objectBoxId,
      setId: (DeliveryTeamModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (DeliveryTeamModel object, fb.Builder fbb) {
        final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
        final tripIdOffset =
            object.tripId == null ? null : fbb.writeString(object.tripId!);
        fbb.startTable(4);
        fbb.addInt64(0, object.objectBoxId);
        fbb.addOffset(1, pocketbaseIdOffset);
        fbb.addOffset(2, tripIdOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object =
            DeliveryTeamModel()
              ..objectBoxId = const fb.Int64Reader().vTableGet(
                buffer,
                rootOffset,
                4,
                0,
              )
              ..pocketbaseId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '')
              ..tripId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 8);

        return object;
      },
    ),
    EndChecklistEntity: obx_int.EntityDefinition<EndChecklistEntity>(
      model: _entities[17],
      toOneRelations: (EndChecklistEntity object) => [],
      toManyRelations: (EndChecklistEntity object) => {},
      getId: (EndChecklistEntity object) => object.dbId,
      setId: (EndChecklistEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (EndChecklistEntity object, fb.Builder fbb) {
        final idOffset = fbb.writeString(object.id);
        final objectNameOffset =
            object.objectName == null
                ? null
                : fbb.writeString(object.objectName!);
        final statusOffset =
            object.status == null ? null : fbb.writeString(object.status!);
        final tripOffset = fbb.writeString(object.trip);
        fbb.startTable(8);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, objectNameOffset);
        fbb.addBool(3, object.isChecked);
        fbb.addOffset(4, statusOffset);
        fbb.addInt64(5, object.timeCompleted?.millisecondsSinceEpoch);
        fbb.addOffset(6, tripOffset);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final timeCompletedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          14,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final objectNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final isCheckedParam = const fb.BoolReader().vTableGetNullable(
          buffer,
          rootOffset,
          10,
        );
        final tripParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 16, '');
        final statusParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final timeCompletedParam =
            timeCompletedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(timeCompletedValue);
        final object = EndChecklistEntity(
          id: idParam,
          objectName: objectNameParam,
          isChecked: isCheckedParam,
          trip: tripParam,
          status: statusParam,
          timeCompleted: timeCompletedParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

        return object;
      },
    ),
    EndTripChecklistModel: obx_int.EntityDefinition<EndTripChecklistModel>(
      model: _entities[18],
      toOneRelations: (EndTripChecklistModel object) => [],
      toManyRelations: (EndTripChecklistModel object) => {},
      getId: (EndTripChecklistModel object) => object.dbId,
      setId: (EndTripChecklistModel object, int id) {
        object.dbId = id;
      },
      objectToFB: (EndTripChecklistModel object, fb.Builder fbb) {
        final idOffset = fbb.writeString(object.id);
        final objectNameOffset = fbb.writeString(object.objectName);
        final statusOffset = fbb.writeString(object.status);
        final tripOffset = fbb.writeString(object.trip);
        fbb.startTable(7);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, objectNameOffset);
        fbb.addBool(3, object.isChecked);
        fbb.addOffset(4, statusOffset);
        fbb.addOffset(5, tripOffset);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final objectNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final isCheckedParam = const fb.BoolReader().vTableGetNullable(
          buffer,
          rootOffset,
          10,
        );
        final statusParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 12, '');
        final tripParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 14, '');
        final object = EndTripChecklistModel(
          id: idParam,
          objectName: objectNameParam,
          isChecked: isCheckedParam,
          status: statusParam,
          trip: tripParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

        return object;
      },
    ),
    TripUpdateEntity: obx_int.EntityDefinition<TripUpdateEntity>(
      model: _entities[19],
      toOneRelations: (TripUpdateEntity object) => [object.trip],
      toManyRelations: (TripUpdateEntity object) => {},
      getId: (TripUpdateEntity object) => object.dbId,
      setId: (TripUpdateEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (TripUpdateEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        final imageOffset =
            object.image == null ? null : fbb.writeString(object.image!);
        final descriptionOffset =
            object.description == null
                ? null
                : fbb.writeString(object.description!);
        final latitudeOffset =
            object.latitude == null ? null : fbb.writeString(object.latitude!);
        final longitudeOffset =
            object.longitude == null
                ? null
                : fbb.writeString(object.longitude!);
        fbb.startTable(11);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addInt64(4, object.date?.millisecondsSinceEpoch);
        fbb.addOffset(5, imageOffset);
        fbb.addOffset(6, descriptionOffset);
        fbb.addOffset(7, latitudeOffset);
        fbb.addOffset(8, longitudeOffset);
        fbb.addInt64(9, object.trip.targetId);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final dateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          12,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final dateParam =
            dateValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(dateValue);
        final imageParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final descriptionParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 16);
        final latitudeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 18);
        final longitudeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 20);
        final object = TripUpdateEntity(
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          date: dateParam,
          image: imageParam,
          description: descriptionParam,
          latitude: latitudeParam,
          longitude: longitudeParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
        object.trip.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          22,
          0,
        );
        object.trip.attach(store);
        return object;
      },
    ),
    TripUpdateModel: obx_int.EntityDefinition<TripUpdateModel>(
      model: _entities[20],
      toOneRelations: (TripUpdateModel object) => [],
      toManyRelations: (TripUpdateModel object) => {},
      getId: (TripUpdateModel object) => object.objectBoxId,
      setId: (TripUpdateModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (TripUpdateModel object, fb.Builder fbb) {
        final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
        final tripIdOffset =
            object.tripId == null ? null : fbb.writeString(object.tripId!);
        fbb.startTable(4);
        fbb.addInt64(0, object.objectBoxId);
        fbb.addOffset(1, pocketbaseIdOffset);
        fbb.addOffset(2, tripIdOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final tripIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final object =
            TripUpdateModel(tripId: tripIdParam)
              ..objectBoxId = const fb.Int64Reader().vTableGet(
                buffer,
                rootOffset,
                4,
                0,
              )
              ..pocketbaseId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '');

        return object;
      },
    ),
    EndTripOtpModel: obx_int.EntityDefinition<EndTripOtpModel>(
      model: _entities[21],
      toOneRelations: (EndTripOtpModel object) => [object.trip],
      toManyRelations: (EndTripOtpModel object) => {},
      getId: (EndTripOtpModel object) => object.dbId,
      setId: (EndTripOtpModel object, int id) {
        object.dbId = id;
      },
      objectToFB: (EndTripOtpModel object, fb.Builder fbb) {
        final idOffset = fbb.writeString(object.id);
        final otpCodeOffset = fbb.writeString(object.otpCode);
        final generatedCodeOffset =
            object.generatedCode == null
                ? null
                : fbb.writeString(object.generatedCode!);
        fbb.startTable(10);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, otpCodeOffset);
        fbb.addOffset(3, generatedCodeOffset);
        fbb.addBool(4, object.isVerified);
        fbb.addInt64(5, object.createdAt.millisecondsSinceEpoch);
        fbb.addInt64(6, object.expiresAt.millisecondsSinceEpoch);
        fbb.addInt64(7, object.verifiedAt?.millisecondsSinceEpoch);
        fbb.addInt64(8, object.trip.targetId);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final verifiedAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final otpCodeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final generatedCodeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final isVerifiedParam = const fb.BoolReader().vTableGet(
          buffer,
          rootOffset,
          12,
          false,
        );
        final createdAtParam = DateTime.fromMillisecondsSinceEpoch(
          const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0),
        );
        final expiresAtParam = DateTime.fromMillisecondsSinceEpoch(
          const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0),
        );
        final verifiedAtParam =
            verifiedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(verifiedAtValue);
        final object = EndTripOtpModel(
          id: idParam,
          otpCode: otpCodeParam,
          generatedCode: generatedCodeParam,
          isVerified: isVerifiedParam,
          createdAt: createdAtParam,
          expiresAt: expiresAtParam,
          verifiedAt: verifiedAtParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
        object.trip.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          20,
          0,
        );
        object.trip.attach(store);
        return object;
      },
    ),
    EndTripOtpEntity: obx_int.EntityDefinition<EndTripOtpEntity>(
      model: _entities[22],
      toOneRelations: (EndTripOtpEntity object) => [object.trip],
      toManyRelations: (EndTripOtpEntity object) => {},
      getId: (EndTripOtpEntity object) => object.dbId,
      setId: (EndTripOtpEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (EndTripOtpEntity object, fb.Builder fbb) {
        final idOffset = fbb.writeString(object.id);
        final otpCodeOffset = fbb.writeString(object.otpCode);
        final generatedCodeOffset =
            object.generatedCode == null
                ? null
                : fbb.writeString(object.generatedCode!);
        final endTripOdometerOffset =
            object.endTripOdometer == null
                ? null
                : fbb.writeString(object.endTripOdometer!);
        fbb.startTable(11);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, otpCodeOffset);
        fbb.addOffset(3, generatedCodeOffset);
        fbb.addBool(4, object.isVerified);
        fbb.addInt64(5, object.createdAt.millisecondsSinceEpoch);
        fbb.addInt64(6, object.expiresAt.millisecondsSinceEpoch);
        fbb.addInt64(7, object.verifiedAt?.millisecondsSinceEpoch);
        fbb.addInt64(8, object.trip.targetId);
        fbb.addOffset(9, endTripOdometerOffset);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final verifiedAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final otpCodeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final endTripOdometerParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 22);
        final generatedCodeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final isVerifiedParam = const fb.BoolReader().vTableGet(
          buffer,
          rootOffset,
          12,
          false,
        );
        final createdAtParam = DateTime.fromMillisecondsSinceEpoch(
          const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0),
        );
        final expiresAtParam = DateTime.fromMillisecondsSinceEpoch(
          const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0),
        );
        final verifiedAtParam =
            verifiedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(verifiedAtValue);
        final object = EndTripOtpEntity(
          id: idParam,
          otpCode: otpCodeParam,
          endTripOdometer: endTripOdometerParam,
          generatedCode: generatedCodeParam,
          isVerified: isVerifiedParam,
          createdAt: createdAtParam,
          expiresAt: expiresAtParam,
          verifiedAt: verifiedAtParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
        object.trip.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          20,
          0,
        );
        object.trip.attach(store);
        return object;
      },
    ),
    OtpEntity: obx_int.EntityDefinition<OtpEntity>(
      model: _entities[23],
      toOneRelations: (OtpEntity object) => [object.trip],
      toManyRelations: (OtpEntity object) => {},
      getId: (OtpEntity object) => object.dbId,
      setId: (OtpEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (OtpEntity object, fb.Builder fbb) {
        final idOffset = fbb.writeString(object.id);
        final otpCodeOffset = fbb.writeString(object.otpCode);
        final generatedCodeOffset =
            object.generatedCode == null
                ? null
                : fbb.writeString(object.generatedCode!);
        final intransitOdometerOffset =
            object.intransitOdometer == null
                ? null
                : fbb.writeString(object.intransitOdometer!);
        fbb.startTable(11);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, otpCodeOffset);
        fbb.addOffset(3, generatedCodeOffset);
        fbb.addBool(4, object.isVerified);
        fbb.addInt64(5, object.createdAt.millisecondsSinceEpoch);
        fbb.addInt64(6, object.expiresAt.millisecondsSinceEpoch);
        fbb.addInt64(7, object.verifiedAt?.millisecondsSinceEpoch);
        fbb.addInt64(8, object.trip.targetId);
        fbb.addOffset(9, intransitOdometerOffset);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final verifiedAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final otpCodeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final generatedCodeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final intransitOdometerParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 22);
        final isVerifiedParam = const fb.BoolReader().vTableGet(
          buffer,
          rootOffset,
          12,
          false,
        );
        final createdAtParam = DateTime.fromMillisecondsSinceEpoch(
          const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0),
        );
        final expiresAtParam = DateTime.fromMillisecondsSinceEpoch(
          const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0),
        );
        final verifiedAtParam =
            verifiedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(verifiedAtValue);
        final object = OtpEntity(
          id: idParam,
          otpCode: otpCodeParam,
          generatedCode: generatedCodeParam,
          intransitOdometer: intransitOdometerParam,
          isVerified: isVerifiedParam,
          createdAt: createdAtParam,
          expiresAt: expiresAtParam,
          verifiedAt: verifiedAtParam,
        )..dbId = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
        object.trip.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          20,
          0,
        );
        object.trip.attach(store);
        return object;
      },
    ),
    CustomerDataEntity: obx_int.EntityDefinition<CustomerDataEntity>(
      model: _entities[24],
      toOneRelations: (CustomerDataEntity object) => [],
      toManyRelations: (CustomerDataEntity object) => {},
      getId: (CustomerDataEntity object) => object.dbId,
      setId: (CustomerDataEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (CustomerDataEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        final nameOffset =
            object.name == null ? null : fbb.writeString(object.name!);
        final refIdOffset =
            object.refId == null ? null : fbb.writeString(object.refId!);
        final provinceOffset =
            object.province == null ? null : fbb.writeString(object.province!);
        final municipalityOffset =
            object.municipality == null
                ? null
                : fbb.writeString(object.municipality!);
        final barangayOffset =
            object.barangay == null ? null : fbb.writeString(object.barangay!);
        final paymentModeOffset =
            object.paymentMode == null
                ? null
                : fbb.writeString(object.paymentMode!);
        final ownerNameOffset =
            object.ownerName == null
                ? null
                : fbb.writeString(object.ownerName!);
        final contactNumberOffset =
            object.contactNumber == null
                ? null
                : fbb.writeString(object.contactNumber!);
        fbb.startTable(17);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addOffset(4, nameOffset);
        fbb.addOffset(5, refIdOffset);
        fbb.addOffset(6, provinceOffset);
        fbb.addOffset(7, municipalityOffset);
        fbb.addOffset(8, barangayOffset);
        fbb.addFloat64(9, object.longitude);
        fbb.addFloat64(10, object.latitude);
        fbb.addInt64(11, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(12, object.updated?.millisecondsSinceEpoch);
        fbb.addOffset(13, paymentModeOffset);
        fbb.addOffset(14, ownerNameOffset);
        fbb.addOffset(15, contactNumberOffset);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          26,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          28,
        );
        final dbIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final paymentModeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 30);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final contactNumberParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 34);
        final ownerNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 32);
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final refIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final provinceParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 16);
        final municipalityParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 18);
        final barangayParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 20);
        final longitudeParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          22,
        );
        final latitudeParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          24,
        );
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final object = CustomerDataEntity(
          dbId: dbIdParam,
          id: idParam,
          paymentMode: paymentModeParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          contactNumber: contactNumberParam,
          ownerName: ownerNameParam,
          name: nameParam,
          refId: refIdParam,
          province: provinceParam,
          municipality: municipalityParam,
          barangay: barangayParam,
          longitude: longitudeParam,
          latitude: latitudeParam,
          created: createdParam,
          updated: updatedParam,
        );

        return object;
      },
    ),
    CustomerDataModel: obx_int.EntityDefinition<CustomerDataModel>(
      model: _entities[25],
      toOneRelations: (CustomerDataModel object) => [],
      toManyRelations: (CustomerDataModel object) => {},
      getId: (CustomerDataModel object) => object.objectBoxId,
      setId: (CustomerDataModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (CustomerDataModel object, fb.Builder fbb) {
        final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
        fbb.startTable(3);
        fbb.addInt64(0, object.objectBoxId);
        fbb.addOffset(1, pocketbaseIdOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final objectBoxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final object = CustomerDataModel(objectBoxId: objectBoxIdParam)
          ..pocketbaseId = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGet(buffer, rootOffset, 6, '');

        return object;
      },
    ),
    DeliveryDataEntity: obx_int.EntityDefinition<DeliveryDataEntity>(
      model: _entities[26],
      toOneRelations:
          (DeliveryDataEntity object) => [
            object.customer,
            object.invoice,
            object.trip,
          ],
      toManyRelations:
          (DeliveryDataEntity object) => {
            obx_int.RelInfo<DeliveryDataEntity>.toMany(45, object.dbId):
                object.deliveryUpdates,
            obx_int.RelInfo<DeliveryDataEntity>.toMany(49, object.dbId):
                object.invoiceItems,
          },
      getId: (DeliveryDataEntity object) => object.dbId,
      setId: (DeliveryDataEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (DeliveryDataEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        final paymentModeOffset =
            object.paymentMode == null
                ? null
                : fbb.writeString(object.paymentMode!);
        final deliveryNumberOffset =
            object.deliveryNumber == null
                ? null
                : fbb.writeString(object.deliveryNumber!);
        final totalDeliveryTimeOffset =
            object.totalDeliveryTime == null
                ? null
                : fbb.writeString(object.totalDeliveryTime!);
        fbb.startTable(14);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addInt64(4, object.customer.targetId);
        fbb.addInt64(5, object.invoice.targetId);
        fbb.addInt64(6, object.trip.targetId);
        fbb.addInt64(7, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(8, object.updated?.millisecondsSinceEpoch);
        fbb.addBool(9, object.hasTrip);
        fbb.addOffset(10, paymentModeOffset);
        fbb.addOffset(11, deliveryNumberOffset);
        fbb.addOffset(12, totalDeliveryTimeOffset);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          20,
        );
        final dbIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final deliveryNumberParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 26);
        final totalDeliveryTimeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 28);
        final paymentModeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 24);
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final hasTripParam = const fb.BoolReader().vTableGetNullable(
          buffer,
          rootOffset,
          22,
        );
        final object = DeliveryDataEntity(
          dbId: dbIdParam,
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          deliveryNumber: deliveryNumberParam,
          totalDeliveryTime: totalDeliveryTimeParam,
          paymentMode: paymentModeParam,
          created: createdParam,
          updated: updatedParam,
          hasTrip: hasTripParam,
        );
        object.customer.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          12,
          0,
        );
        object.customer.attach(store);
        object.invoice.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          14,
          0,
        );
        object.invoice.attach(store);
        object.trip.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          16,
          0,
        );
        object.trip.attach(store);
        obx_int.InternalToManyAccess.setRelInfo<DeliveryDataEntity>(
          object.deliveryUpdates,
          store,
          obx_int.RelInfo<DeliveryDataEntity>.toMany(45, object.dbId),
        );
        obx_int.InternalToManyAccess.setRelInfo<DeliveryDataEntity>(
          object.invoiceItems,
          store,
          obx_int.RelInfo<DeliveryDataEntity>.toMany(49, object.dbId),
        );
        return object;
      },
    ),
    DeliveryDataModel: obx_int.EntityDefinition<DeliveryDataModel>(
      model: _entities[27],
      toOneRelations: (DeliveryDataModel object) => [],
      toManyRelations: (DeliveryDataModel object) => {},
      getId: (DeliveryDataModel object) => object.objectBoxId,
      setId: (DeliveryDataModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (DeliveryDataModel object, fb.Builder fbb) {
        final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
        final tripIdOffset =
            object.tripId == null ? null : fbb.writeString(object.tripId!);
        fbb.startTable(7);
        fbb.addInt64(0, object.objectBoxId);
        fbb.addOffset(1, pocketbaseIdOffset);
        fbb.addOffset(2, tripIdOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final objectBoxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final object =
            DeliveryDataModel(objectBoxId: objectBoxIdParam)
              ..pocketbaseId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '')
              ..tripId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 8);

        return object;
      },
    ),
    DeliveryVehicleEntity: obx_int.EntityDefinition<DeliveryVehicleEntity>(
      model: _entities[28],
      toOneRelations: (DeliveryVehicleEntity object) => [],
      toManyRelations: (DeliveryVehicleEntity object) => {},
      getId: (DeliveryVehicleEntity object) => object.dbId,
      setId: (DeliveryVehicleEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (DeliveryVehicleEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        final nameOffset =
            object.name == null ? null : fbb.writeString(object.name!);
        final plateNoOffset =
            object.plateNo == null ? null : fbb.writeString(object.plateNo!);
        final makeOffset =
            object.make == null ? null : fbb.writeString(object.make!);
        final typeOffset =
            object.type == null ? null : fbb.writeString(object.type!);
        final wheelsOffset =
            object.wheels == null ? null : fbb.writeString(object.wheels!);
        fbb.startTable(14);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addOffset(4, nameOffset);
        fbb.addOffset(5, plateNoOffset);
        fbb.addOffset(6, makeOffset);
        fbb.addOffset(7, typeOffset);
        fbb.addOffset(8, wheelsOffset);
        fbb.addFloat64(9, object.volumeCapacity);
        fbb.addFloat64(10, object.weightCapacity);
        fbb.addInt64(11, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(12, object.updated?.millisecondsSinceEpoch);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          26,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          28,
        );
        final dbIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final plateNoParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final makeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 16);
        final typeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 18);
        final wheelsParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 20);
        final volumeCapacityParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          22,
        );
        final weightCapacityParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          24,
        );
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final object = DeliveryVehicleEntity(
          dbId: dbIdParam,
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          name: nameParam,
          plateNo: plateNoParam,
          make: makeParam,
          type: typeParam,
          wheels: wheelsParam,
          volumeCapacity: volumeCapacityParam,
          weightCapacity: weightCapacityParam,
          created: createdParam,
          updated: updatedParam,
        );

        return object;
      },
    ),
    DeliveryVehicleModel: obx_int.EntityDefinition<DeliveryVehicleModel>(
      model: _entities[29],
      toOneRelations: (DeliveryVehicleModel object) => [],
      toManyRelations: (DeliveryVehicleModel object) => {},
      getId: (DeliveryVehicleModel object) => object.objectBoxId,
      setId: (DeliveryVehicleModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (DeliveryVehicleModel object, fb.Builder fbb) {
        final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
        final tripIdOffset = fbb.writeString(object.tripId);
        fbb.startTable(4);
        fbb.addInt64(0, object.objectBoxId);
        fbb.addOffset(1, pocketbaseIdOffset);
        fbb.addOffset(2, tripIdOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final objectBoxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final object =
            DeliveryVehicleModel(objectBoxId: objectBoxIdParam)
              ..pocketbaseId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '')
              ..tripId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 8, '');

        return object;
      },
    ),
    InvoiceDataEntity: obx_int.EntityDefinition<InvoiceDataEntity>(
      model: _entities[30],
      toOneRelations: (InvoiceDataEntity object) => [object.customer],
      toManyRelations: (InvoiceDataEntity object) => {},
      getId: (InvoiceDataEntity object) => object.dbId,
      setId: (InvoiceDataEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (InvoiceDataEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        final refIdOffset =
            object.refId == null ? null : fbb.writeString(object.refId!);
        final nameOffset =
            object.name == null ? null : fbb.writeString(object.name!);
        fbb.startTable(14);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addOffset(4, refIdOffset);
        fbb.addOffset(5, nameOffset);
        fbb.addInt64(6, object.documentDate?.millisecondsSinceEpoch);
        fbb.addFloat64(7, object.totalAmount);
        fbb.addFloat64(8, object.volume);
        fbb.addFloat64(9, object.weight);
        fbb.addInt64(10, object.customer.targetId);
        fbb.addInt64(11, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(12, object.updated?.millisecondsSinceEpoch);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final documentDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          16,
        );
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          26,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          28,
        );
        final dbIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final refIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final documentDateParam =
            documentDateValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(documentDateValue);
        final totalAmountParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final volumeParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          20,
        );
        final weightParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          22,
        );
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final object = InvoiceDataEntity(
          dbId: dbIdParam,
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          refId: refIdParam,
          name: nameParam,
          documentDate: documentDateParam,
          totalAmount: totalAmountParam,
          volume: volumeParam,
          weight: weightParam,
          created: createdParam,
          updated: updatedParam,
        );
        object.customer.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          24,
          0,
        );
        object.customer.attach(store);
        return object;
      },
    ),
    InvoiceDataModel: obx_int.EntityDefinition<InvoiceDataModel>(
      model: _entities[31],
      toOneRelations: (InvoiceDataModel object) => [],
      toManyRelations: (InvoiceDataModel object) => {},
      getId: (InvoiceDataModel object) => object.objectBoxId,
      setId: (InvoiceDataModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (InvoiceDataModel object, fb.Builder fbb) {
        final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
        fbb.startTable(3);
        fbb.addInt64(0, object.objectBoxId);
        fbb.addOffset(1, pocketbaseIdOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final objectBoxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final object = InvoiceDataModel(objectBoxId: objectBoxIdParam)
          ..pocketbaseId = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGet(buffer, rootOffset, 6, '');

        return object;
      },
    ),
    InvoiceItemsEntity: obx_int.EntityDefinition<InvoiceItemsEntity>(
      model: _entities[32],
      toOneRelations: (InvoiceItemsEntity object) => [object.invoiceData],
      toManyRelations: (InvoiceItemsEntity object) => {},
      getId: (InvoiceItemsEntity object) => object.dbId,
      setId: (InvoiceItemsEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (InvoiceItemsEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        final nameOffset =
            object.name == null ? null : fbb.writeString(object.name!);
        final brandOffset =
            object.brand == null ? null : fbb.writeString(object.brand!);
        final refIdOffset =
            object.refId == null ? null : fbb.writeString(object.refId!);
        final uomOffset =
            object.uom == null ? null : fbb.writeString(object.uom!);
        fbb.startTable(16);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addOffset(4, nameOffset);
        fbb.addOffset(5, brandOffset);
        fbb.addOffset(6, refIdOffset);
        fbb.addOffset(7, uomOffset);
        fbb.addFloat64(8, object.quantity);
        fbb.addFloat64(9, object.totalBaseQuantity);
        fbb.addFloat64(10, object.uomPrice);
        fbb.addFloat64(11, object.totalAmount);
        fbb.addInt64(12, object.invoiceData.targetId);
        fbb.addInt64(13, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(14, object.updated?.millisecondsSinceEpoch);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          30,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          32,
        );
        final dbIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final brandParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final refIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 16);
        final uomParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 18);
        final quantityParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          20,
        );
        final totalBaseQuantityParam = const fb.Float64Reader()
            .vTableGetNullable(buffer, rootOffset, 22);
        final uomPriceParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          24,
        );
        final totalAmountParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          26,
        );
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final object = InvoiceItemsEntity(
          dbId: dbIdParam,
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          name: nameParam,
          brand: brandParam,
          refId: refIdParam,
          uom: uomParam,
          quantity: quantityParam,
          totalBaseQuantity: totalBaseQuantityParam,
          uomPrice: uomPriceParam,
          totalAmount: totalAmountParam,
          created: createdParam,
          updated: updatedParam,
        );
        object.invoiceData.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          28,
          0,
        );
        object.invoiceData.attach(store);
        return object;
      },
    ),
    InvoiceItemsModel: obx_int.EntityDefinition<InvoiceItemsModel>(
      model: _entities[33],
      toOneRelations: (InvoiceItemsModel object) => [],
      toManyRelations: (InvoiceItemsModel object) => {},
      getId: (InvoiceItemsModel object) => object.objectBoxId,
      setId: (InvoiceItemsModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (InvoiceItemsModel object, fb.Builder fbb) {
        final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
        final invoiceDataIdOffset =
            object.invoiceDataId == null
                ? null
                : fbb.writeString(object.invoiceDataId!);
        fbb.startTable(4);
        fbb.addInt64(0, object.objectBoxId);
        fbb.addOffset(1, pocketbaseIdOffset);
        fbb.addOffset(2, invoiceDataIdOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final objectBoxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final object =
            InvoiceItemsModel(objectBoxId: objectBoxIdParam)
              ..pocketbaseId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '')
              ..invoiceDataId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 8);

        return object;
      },
    ),
    CancelledInvoiceEntity: obx_int.EntityDefinition<CancelledInvoiceEntity>(
      model: _entities[34],
      toOneRelations:
          (CancelledInvoiceEntity object) => [
            object.deliveryData,
            object.trip,
            object.customer,
            object.invoice,
          ],
      toManyRelations: (CancelledInvoiceEntity object) => {},
      getId: (CancelledInvoiceEntity object) => object.dbId,
      setId: (CancelledInvoiceEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (CancelledInvoiceEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        final imageOffset =
            object.image == null ? null : fbb.writeString(object.image!);
        fbb.startTable(12);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addInt64(4, object.deliveryData.targetId);
        fbb.addInt64(5, object.trip.targetId);
        fbb.addOffset(6, imageOffset);
        fbb.addInt64(7, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(8, object.updated?.millisecondsSinceEpoch);
        fbb.addInt64(9, object.customer.targetId);
        fbb.addInt64(10, object.invoice.targetId);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          20,
        );
        final dbIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final imageParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 16);
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final object = CancelledInvoiceEntity(
          dbId: dbIdParam,
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          image: imageParam,
          created: createdParam,
          updated: updatedParam,
        );
        object.deliveryData.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          12,
          0,
        );
        object.deliveryData.attach(store);
        object.trip.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          14,
          0,
        );
        object.trip.attach(store);
        object.customer.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          22,
          0,
        );
        object.customer.attach(store);
        object.invoice.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          24,
          0,
        );
        object.invoice.attach(store);
        return object;
      },
    ),
    CancelledInvoiceModel: obx_int.EntityDefinition<CancelledInvoiceModel>(
      model: _entities[35],
      toOneRelations: (CancelledInvoiceModel object) => [],
      toManyRelations: (CancelledInvoiceModel object) => {},
      getId: (CancelledInvoiceModel object) => object.objectBoxId,
      setId: (CancelledInvoiceModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (CancelledInvoiceModel object, fb.Builder fbb) {
        final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
        final deliveryDataIdOffset =
            object.deliveryDataId == null
                ? null
                : fbb.writeString(object.deliveryDataId!);
        final tripIdOffset =
            object.tripId == null ? null : fbb.writeString(object.tripId!);
        final customerIdOffset =
            object.customerId == null
                ? null
                : fbb.writeString(object.customerId!);
        final invoiceIdOffset =
            object.invoiceId == null
                ? null
                : fbb.writeString(object.invoiceId!);
        fbb.startTable(7);
        fbb.addInt64(0, object.objectBoxId);
        fbb.addOffset(1, pocketbaseIdOffset);
        fbb.addOffset(2, deliveryDataIdOffset);
        fbb.addOffset(3, tripIdOffset);
        fbb.addOffset(4, customerIdOffset);
        fbb.addOffset(5, invoiceIdOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final objectBoxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final object =
            CancelledInvoiceModel(objectBoxId: objectBoxIdParam)
              ..pocketbaseId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '')
              ..deliveryDataId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 8)
              ..tripId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 10)
              ..customerId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 12)
              ..invoiceId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 14);

        return object;
      },
    ),
    CollectionEntity: obx_int.EntityDefinition<CollectionEntity>(
      model: _entities[36],
      toOneRelations:
          (CollectionEntity object) => [
            object.deliveryData,
            object.trip,
            object.customer,
            object.invoice,
          ],
      toManyRelations: (CollectionEntity object) => {},
      getId: (CollectionEntity object) => object.dbId,
      setId: (CollectionEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (CollectionEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        fbb.startTable(12);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addInt64(4, object.deliveryData.targetId);
        fbb.addInt64(5, object.trip.targetId);
        fbb.addFloat64(6, object.totalAmount);
        fbb.addInt64(7, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(8, object.updated?.millisecondsSinceEpoch);
        fbb.addInt64(9, object.customer.targetId);
        fbb.addInt64(10, object.invoice.targetId);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          20,
        );
        final dbIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final totalAmountParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          16,
        );
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final object = CollectionEntity(
          dbId: dbIdParam,
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          totalAmount: totalAmountParam,
          created: createdParam,
          updated: updatedParam,
        );
        object.deliveryData.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          12,
          0,
        );
        object.deliveryData.attach(store);
        object.trip.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          14,
          0,
        );
        object.trip.attach(store);
        object.customer.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          22,
          0,
        );
        object.customer.attach(store);
        object.invoice.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          24,
          0,
        );
        object.invoice.attach(store);
        return object;
      },
    ),
    CollectionModel: obx_int.EntityDefinition<CollectionModel>(
      model: _entities[37],
      toOneRelations: (CollectionModel object) => [],
      toManyRelations: (CollectionModel object) => {},
      getId: (CollectionModel object) => object.objectBoxId,
      setId: (CollectionModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (CollectionModel object, fb.Builder fbb) {
        final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
        final deliveryDataIdOffset =
            object.deliveryDataId == null
                ? null
                : fbb.writeString(object.deliveryDataId!);
        final tripIdOffset =
            object.tripId == null ? null : fbb.writeString(object.tripId!);
        final customerIdOffset =
            object.customerId == null
                ? null
                : fbb.writeString(object.customerId!);
        final invoiceIdOffset =
            object.invoiceId == null
                ? null
                : fbb.writeString(object.invoiceId!);
        fbb.startTable(7);
        fbb.addInt64(0, object.objectBoxId);
        fbb.addOffset(1, pocketbaseIdOffset);
        fbb.addOffset(2, deliveryDataIdOffset);
        fbb.addOffset(3, tripIdOffset);
        fbb.addOffset(4, customerIdOffset);
        fbb.addOffset(5, invoiceIdOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final objectBoxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final object =
            CollectionModel(objectBoxId: objectBoxIdParam)
              ..pocketbaseId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '')
              ..deliveryDataId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 8)
              ..tripId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 10)
              ..customerId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 12)
              ..invoiceId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 14);

        return object;
      },
    ),
    DeliveryReceiptEntity: obx_int.EntityDefinition<DeliveryReceiptEntity>(
      model: _entities[38],
      toOneRelations:
          (DeliveryReceiptEntity object) => [object.trip, object.deliveryData],
      toManyRelations: (DeliveryReceiptEntity object) => {},
      getId: (DeliveryReceiptEntity object) => object.dbId,
      setId: (DeliveryReceiptEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (DeliveryReceiptEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        final statusOffset =
            object.status == null ? null : fbb.writeString(object.status!);
        final customerImagesOffset =
            object.customerImages == null
                ? null
                : fbb.writeList(
                  object.customerImages!
                      .map(fbb.writeString)
                      .toList(growable: false),
                );
        final customerSignatureOffset =
            object.customerSignature == null
                ? null
                : fbb.writeString(object.customerSignature!);
        final receiptFileOffset =
            object.receiptFile == null
                ? null
                : fbb.writeString(object.receiptFile!);
        fbb.startTable(15);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addInt64(4, object.trip.targetId);
        fbb.addInt64(5, object.deliveryData.targetId);
        fbb.addOffset(6, statusOffset);
        fbb.addInt64(7, object.dateTimeCompleted?.millisecondsSinceEpoch);
        fbb.addInt64(8, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(9, object.updated?.millisecondsSinceEpoch);
        fbb.addOffset(10, customerImagesOffset);
        fbb.addOffset(11, customerSignatureOffset);
        fbb.addOffset(12, receiptFileOffset);
        fbb.addFloat64(13, object.totalAmount);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final dateTimeCompletedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          20,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          22,
        );
        final dbIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final totalAmountParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          30,
        );
        final statusParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 16);
        final dateTimeCompletedParam =
            dateTimeCompletedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(dateTimeCompletedValue);
        final customerImagesParam = const fb.ListReader<String>(
          fb.StringReader(asciiOptimization: true),
          lazy: false,
        ).vTableGetNullable(buffer, rootOffset, 24);
        final customerSignatureParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 26);
        final receiptFileParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 28);
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final object = DeliveryReceiptEntity(
          dbId: dbIdParam,
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          totalAmount: totalAmountParam,
          status: statusParam,
          dateTimeCompleted: dateTimeCompletedParam,
          customerImages: customerImagesParam,
          customerSignature: customerSignatureParam,
          receiptFile: receiptFileParam,
          created: createdParam,
          updated: updatedParam,
        );
        object.trip.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          12,
          0,
        );
        object.trip.attach(store);
        object.deliveryData.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          14,
          0,
        );
        object.deliveryData.attach(store);
        return object;
      },
    ),
    DeliveryReceiptItemsEntity: obx_int.EntityDefinition<
      DeliveryReceiptItemsEntity
    >(
      model: _entities[39],
      toOneRelations:
          (DeliveryReceiptItemsEntity object) => [object.deliveryReceipt],
      toManyRelations:
          (DeliveryReceiptItemsEntity object) => {
            obx_int.RelInfo<DeliveryReceiptItemsEntity>.toMany(48, object.dbId):
                object.invoiceItems,
          },
      getId: (DeliveryReceiptItemsEntity object) => object.dbId,
      setId: (DeliveryReceiptItemsEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (DeliveryReceiptItemsEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        final statusOffset =
            object.status == null ? null : fbb.writeString(object.status!);
        final customerImageOffset =
            object.customerImage == null
                ? null
                : fbb.writeString(object.customerImage!);
        final receiptFileOffset =
            object.receiptFile == null
                ? null
                : fbb.writeString(object.receiptFile!);
        fbb.startTable(12);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addInt64(4, object.deliveryReceipt.targetId);
        fbb.addOffset(5, statusOffset);
        fbb.addFloat64(6, object.totalAmount);
        fbb.addOffset(7, customerImageOffset);
        fbb.addOffset(8, receiptFileOffset);
        fbb.addInt64(9, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(10, object.updated?.millisecondsSinceEpoch);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          22,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          24,
        );
        final dbIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final statusParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final totalAmountParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          16,
        );
        final customerImageParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 18);
        final receiptFileParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 20);
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final object = DeliveryReceiptItemsEntity(
          dbId: dbIdParam,
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          status: statusParam,
          totalAmount: totalAmountParam,
          customerImage: customerImageParam,
          receiptFile: receiptFileParam,
          created: createdParam,
          updated: updatedParam,
        );
        object.deliveryReceipt.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          12,
          0,
        );
        object.deliveryReceipt.attach(store);
        obx_int.InternalToManyAccess.setRelInfo<DeliveryReceiptItemsEntity>(
          object.invoiceItems,
          store,
          obx_int.RelInfo<DeliveryReceiptItemsEntity>.toMany(48, object.dbId),
        );
        return object;
      },
    ),
    DeliveryReceiptItemsModel:
        obx_int.EntityDefinition<DeliveryReceiptItemsModel>(
          model: _entities[40],
          toOneRelations: (DeliveryReceiptItemsModel object) => [],
          toManyRelations: (DeliveryReceiptItemsModel object) => {},
          getId: (DeliveryReceiptItemsModel object) => object.objectBoxId,
          setId: (DeliveryReceiptItemsModel object, int id) {
            object.objectBoxId = id;
          },
          objectToFB: (DeliveryReceiptItemsModel object, fb.Builder fbb) {
            final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
            final deliveryReceiptIdOffset =
                object.deliveryReceiptId == null
                    ? null
                    : fbb.writeString(object.deliveryReceiptId!);
            fbb.startTable(4);
            fbb.addInt64(0, object.objectBoxId);
            fbb.addOffset(1, pocketbaseIdOffset);
            fbb.addOffset(2, deliveryReceiptIdOffset);
            fbb.finish(fbb.endTable());
            return object.objectBoxId;
          },
          objectFromFB: (obx.Store store, ByteData fbData) {
            final buffer = fb.BufferContext(fbData);
            final rootOffset = buffer.derefObject(0);
            final objectBoxIdParam = const fb.Int64Reader().vTableGet(
              buffer,
              rootOffset,
              4,
              0,
            );
            final object =
                DeliveryReceiptItemsModel(objectBoxId: objectBoxIdParam)
                  ..pocketbaseId = const fb.StringReader(
                    asciiOptimization: true,
                  ).vTableGet(buffer, rootOffset, 6, '')
                  ..deliveryReceiptId = const fb.StringReader(
                    asciiOptimization: true,
                  ).vTableGetNullable(buffer, rootOffset, 8);

            return object;
          },
        ),
    DeliveryReceiptModel: obx_int.EntityDefinition<DeliveryReceiptModel>(
      model: _entities[41],
      toOneRelations: (DeliveryReceiptModel object) => [],
      toManyRelations: (DeliveryReceiptModel object) => {},
      getId: (DeliveryReceiptModel object) => object.objectBoxId,
      setId: (DeliveryReceiptModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (DeliveryReceiptModel object, fb.Builder fbb) {
        final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
        final tripIdOffset =
            object.tripId == null ? null : fbb.writeString(object.tripId!);
        final deliveryDataIdOffset =
            object.deliveryDataId == null
                ? null
                : fbb.writeString(object.deliveryDataId!);
        final customerImagesStringOffset =
            object.customerImagesString == null
                ? null
                : fbb.writeString(object.customerImagesString!);
        final customerImagesOffset =
            object.customerImages == null
                ? null
                : fbb.writeList(
                  object.customerImages!
                      .map(fbb.writeString)
                      .toList(growable: false),
                );
        fbb.startTable(7);
        fbb.addInt64(0, object.objectBoxId);
        fbb.addOffset(1, pocketbaseIdOffset);
        fbb.addOffset(2, tripIdOffset);
        fbb.addOffset(3, deliveryDataIdOffset);
        fbb.addOffset(4, customerImagesStringOffset);
        fbb.addOffset(5, customerImagesOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final customerImagesParam = const fb.ListReader<String>(
          fb.StringReader(asciiOptimization: true),
          lazy: false,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final objectBoxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final object =
            DeliveryReceiptModel(
                customerImages: customerImagesParam,
                objectBoxId: objectBoxIdParam,
              )
              ..pocketbaseId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '')
              ..tripId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 8)
              ..deliveryDataId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 10)
              ..customerImagesString = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 12);

        return object;
      },
    ),
    ReturnItemsEntity: obx_int.EntityDefinition<ReturnItemsEntity>(
      model: _entities[42],
      toOneRelations:
          (ReturnItemsEntity object) => [
            object.trip,
            object.deliveryData,
            object.invoiceItem,
            object.invoiceData,
          ],
      toManyRelations: (ReturnItemsEntity object) => {},
      getId: (ReturnItemsEntity object) => object.dbId,
      setId: (ReturnItemsEntity object, int id) {
        object.dbId = id;
      },
      objectToFB: (ReturnItemsEntity object, fb.Builder fbb) {
        final idOffset = object.id == null ? null : fbb.writeString(object.id!);
        final collectionIdOffset =
            object.collectionId == null
                ? null
                : fbb.writeString(object.collectionId!);
        final collectionNameOffset =
            object.collectionName == null
                ? null
                : fbb.writeString(object.collectionName!);
        final refIdOffset =
            object.refId == null ? null : fbb.writeString(object.refId!);
        final uomOffset =
            object.uom == null ? null : fbb.writeString(object.uom!);
        fbb.startTable(14);
        fbb.addInt64(0, object.dbId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, collectionIdOffset);
        fbb.addOffset(3, collectionNameOffset);
        fbb.addInt64(4, object.trip.targetId);
        fbb.addInt64(5, object.deliveryData.targetId);
        fbb.addInt64(6, object.invoiceItem.targetId);
        fbb.addInt64(7, object.invoiceData.targetId);
        fbb.addOffset(8, refIdOffset);
        fbb.addInt64(9, object.quantity);
        fbb.addOffset(10, uomOffset);
        fbb.addInt64(11, object.created?.millisecondsSinceEpoch);
        fbb.addInt64(12, object.updated?.millisecondsSinceEpoch);
        fbb.finish(fbb.endTable());
        return object.dbId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final createdValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          26,
        );
        final updatedValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          28,
        );
        final dbIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final collectionIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final collectionNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final refIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 20);
        final quantityParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          22,
        );
        final uomParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 24);
        final createdParam =
            createdValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(createdValue);
        final updatedParam =
            updatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedValue);
        final object = ReturnItemsEntity(
          dbId: dbIdParam,
          id: idParam,
          collectionId: collectionIdParam,
          collectionName: collectionNameParam,
          refId: refIdParam,
          quantity: quantityParam,
          uom: uomParam,
          created: createdParam,
          updated: updatedParam,
        );
        object.trip.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          12,
          0,
        );
        object.trip.attach(store);
        object.deliveryData.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          14,
          0,
        );
        object.deliveryData.attach(store);
        object.invoiceItem.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          16,
          0,
        );
        object.invoiceItem.attach(store);
        object.invoiceData.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          18,
          0,
        );
        object.invoiceData.attach(store);
        return object;
      },
    ),
    ReturnItemsModel: obx_int.EntityDefinition<ReturnItemsModel>(
      model: _entities[43],
      toOneRelations: (ReturnItemsModel object) => [],
      toManyRelations: (ReturnItemsModel object) => {},
      getId: (ReturnItemsModel object) => object.objectBoxId,
      setId: (ReturnItemsModel object, int id) {
        object.objectBoxId = id;
      },
      objectToFB: (ReturnItemsModel object, fb.Builder fbb) {
        final pocketbaseIdOffset = fbb.writeString(object.pocketbaseId);
        final tripIdOffset =
            object.tripId == null ? null : fbb.writeString(object.tripId!);
        fbb.startTable(4);
        fbb.addInt64(0, object.objectBoxId);
        fbb.addOffset(1, pocketbaseIdOffset);
        fbb.addOffset(2, tripIdOffset);
        fbb.finish(fbb.endTable());
        return object.objectBoxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final objectBoxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final object =
            ReturnItemsModel(objectBoxId: objectBoxIdParam)
              ..pocketbaseId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGet(buffer, rootOffset, 6, '')
              ..tripId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 8);

        return object;
      },
    ),
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [LocalUser] entity fields to define ObjectBox queries.
class LocalUser_ {
  /// See [LocalUser.dbId].
  static final dbId = obx.QueryIntegerProperty<LocalUser>(
    _entities[0].properties[0],
  );

  /// See [LocalUser.email].
  static final email = obx.QueryStringProperty<LocalUser>(
    _entities[0].properties[1],
  );

  /// See [LocalUser.profilePic].
  static final profilePic = obx.QueryStringProperty<LocalUser>(
    _entities[0].properties[2],
  );

  /// See [LocalUser.name].
  static final name = obx.QueryStringProperty<LocalUser>(
    _entities[0].properties[3],
  );

  /// See [LocalUser.tripNumberId].
  static final tripNumberId = obx.QueryStringProperty<LocalUser>(
    _entities[0].properties[4],
  );

  /// See [LocalUser.id].
  static final id = obx.QueryStringProperty<LocalUser>(
    _entities[0].properties[5],
  );

  /// See [LocalUser.collectionId].
  static final collectionId = obx.QueryStringProperty<LocalUser>(
    _entities[0].properties[6],
  );

  /// See [LocalUser.collectionName].
  static final collectionName = obx.QueryStringProperty<LocalUser>(
    _entities[0].properties[7],
  );

  /// See [LocalUser.trip].
  static final trip = obx.QueryRelationToOne<LocalUser, TripModel>(
    _entities[0].properties[8],
  );

  /// See [LocalUser.deliveryTeam].
  static final deliveryTeam =
      obx.QueryRelationToOne<LocalUser, DeliveryTeamModel>(
        _entities[0].properties[9],
      );

  /// See [LocalUser.token].
  static final token = obx.QueryStringProperty<LocalUser>(
    _entities[0].properties[10],
  );
}

/// [ChecklistEntity] entity fields to define ObjectBox queries.
class ChecklistEntity_ {
  /// See [ChecklistEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<ChecklistEntity>(
    _entities[1].properties[0],
  );

  /// See [ChecklistEntity.id].
  static final id = obx.QueryStringProperty<ChecklistEntity>(
    _entities[1].properties[1],
  );

  /// See [ChecklistEntity.objectName].
  static final objectName = obx.QueryStringProperty<ChecklistEntity>(
    _entities[1].properties[2],
  );

  /// See [ChecklistEntity.isChecked].
  static final isChecked = obx.QueryBooleanProperty<ChecklistEntity>(
    _entities[1].properties[3],
  );

  /// See [ChecklistEntity.status].
  static final status = obx.QueryStringProperty<ChecklistEntity>(
    _entities[1].properties[4],
  );

  /// See [ChecklistEntity.timeCompleted].
  static final timeCompleted = obx.QueryDateProperty<ChecklistEntity>(
    _entities[1].properties[5],
  );

  /// See [ChecklistEntity.trip].
  static final trip = obx.QueryRelationToOne<ChecklistEntity, TripModel>(
    _entities[1].properties[6],
  );
}

/// [ChecklistModel] entity fields to define ObjectBox queries.
class ChecklistModel_ {
  /// See [ChecklistModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<ChecklistModel>(
    _entities[2].properties[0],
  );

  /// See [ChecklistModel.tripId].
  static final tripId = obx.QueryStringProperty<ChecklistModel>(
    _entities[2].properties[1],
  );

  /// See [ChecklistModel.pocketBaseId].
  static final pocketBaseId = obx.QueryStringProperty<ChecklistModel>(
    _entities[2].properties[2],
  );

  /// See [ChecklistModel.isChecked].
  static final isChecked = obx.QueryBooleanProperty<ChecklistModel>(
    _entities[2].properties[3],
  );
}

/// [DeliveryUpdateEntity] entity fields to define ObjectBox queries.
class DeliveryUpdateEntity_ {
  /// See [DeliveryUpdateEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<DeliveryUpdateEntity>(
    _entities[3].properties[0],
  );

  /// See [DeliveryUpdateEntity.id].
  static final id = obx.QueryStringProperty<DeliveryUpdateEntity>(
    _entities[3].properties[1],
  );

  /// See [DeliveryUpdateEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<DeliveryUpdateEntity>(
    _entities[3].properties[2],
  );

  /// See [DeliveryUpdateEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<DeliveryUpdateEntity>(
    _entities[3].properties[3],
  );

  /// See [DeliveryUpdateEntity.title].
  static final title = obx.QueryStringProperty<DeliveryUpdateEntity>(
    _entities[3].properties[4],
  );

  /// See [DeliveryUpdateEntity.subtitle].
  static final subtitle = obx.QueryStringProperty<DeliveryUpdateEntity>(
    _entities[3].properties[5],
  );

  /// See [DeliveryUpdateEntity.time].
  static final time = obx.QueryDateProperty<DeliveryUpdateEntity>(
    _entities[3].properties[6],
  );

  /// See [DeliveryUpdateEntity.created].
  static final created = obx.QueryDateProperty<DeliveryUpdateEntity>(
    _entities[3].properties[7],
  );

  /// See [DeliveryUpdateEntity.updated].
  static final updated = obx.QueryDateProperty<DeliveryUpdateEntity>(
    _entities[3].properties[8],
  );

  /// See [DeliveryUpdateEntity.customer].
  static final customer = obx.QueryStringProperty<DeliveryUpdateEntity>(
    _entities[3].properties[9],
  );

  /// See [DeliveryUpdateEntity.isAssigned].
  static final isAssigned = obx.QueryBooleanProperty<DeliveryUpdateEntity>(
    _entities[3].properties[10],
  );

  /// See [DeliveryUpdateEntity.assignedTo].
  static final assignedTo = obx.QueryStringProperty<DeliveryUpdateEntity>(
    _entities[3].properties[11],
  );

  /// See [DeliveryUpdateEntity.image].
  static final image = obx.QueryStringProperty<DeliveryUpdateEntity>(
    _entities[3].properties[12],
  );

  /// See [DeliveryUpdateEntity.remarks].
  static final remarks = obx.QueryStringProperty<DeliveryUpdateEntity>(
    _entities[3].properties[13],
  );

  /// See [DeliveryUpdateEntity.deliveryData].
  static final deliveryData =
      obx.QueryRelationToOne<DeliveryUpdateEntity, DeliveryDataModel>(
        _entities[3].properties[14],
      );
}

/// [DeliveryUpdateModel] entity fields to define ObjectBox queries.
class DeliveryUpdateModel_ {
  /// See [DeliveryUpdateModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<DeliveryUpdateModel>(
    _entities[4].properties[0],
  );

  /// See [DeliveryUpdateModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<DeliveryUpdateModel>(
    _entities[4].properties[1],
  );

  /// See [DeliveryUpdateModel.customer].
  static final customer = obx.QueryStringProperty<DeliveryUpdateModel>(
    _entities[4].properties[2],
  );
}

/// [PersonelEntity] entity fields to define ObjectBox queries.
class PersonelEntity_ {
  /// See [PersonelEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<PersonelEntity>(
    _entities[5].properties[0],
  );

  /// See [PersonelEntity.id].
  static final id = obx.QueryStringProperty<PersonelEntity>(
    _entities[5].properties[1],
  );

  /// See [PersonelEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<PersonelEntity>(
    _entities[5].properties[2],
  );

  /// See [PersonelEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<PersonelEntity>(
    _entities[5].properties[3],
  );

  /// See [PersonelEntity.name].
  static final name = obx.QueryStringProperty<PersonelEntity>(
    _entities[5].properties[4],
  );

  /// See [PersonelEntity.created].
  static final created = obx.QueryDateProperty<PersonelEntity>(
    _entities[5].properties[5],
  );

  /// See [PersonelEntity.updated].
  static final updated = obx.QueryDateProperty<PersonelEntity>(
    _entities[5].properties[6],
  );

  /// See [PersonelEntity.deliveryTeam].
  static final deliveryTeam =
      obx.QueryRelationToOne<PersonelEntity, DeliveryTeamModel>(
        _entities[5].properties[7],
      );

  /// See [PersonelEntity.trip].
  static final trip = obx.QueryRelationToOne<PersonelEntity, TripModel>(
    _entities[5].properties[8],
  );
}

/// [PersonelModel] entity fields to define ObjectBox queries.
class PersonelModel_ {
  /// See [PersonelModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<PersonelModel>(
    _entities[6].properties[0],
  );

  /// See [PersonelModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<PersonelModel>(
    _entities[6].properties[1],
  );

  /// See [PersonelModel.tripId].
  static final tripId = obx.QueryStringProperty<PersonelModel>(
    _entities[6].properties[2],
  );

  /// See [PersonelModel.deliveryTeamId].
  static final deliveryTeamId = obx.QueryStringProperty<PersonelModel>(
    _entities[6].properties[3],
  );
}

/// [TripEntity] entity fields to define ObjectBox queries.
class TripEntity_ {
  /// See [TripEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<TripEntity>(
    _entities[7].properties[0],
  );

  /// See [TripEntity.id].
  static final id = obx.QueryStringProperty<TripEntity>(
    _entities[7].properties[1],
  );

  /// See [TripEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<TripEntity>(
    _entities[7].properties[2],
  );

  /// See [TripEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<TripEntity>(
    _entities[7].properties[3],
  );

  /// See [TripEntity.tripNumberId].
  static final tripNumberId = obx.QueryStringProperty<TripEntity>(
    _entities[7].properties[4],
  );

  /// See [TripEntity.timeline].
  static final timeline =
      obx.QueryRelationToOne<TripEntity, UpdateTimelineModel>(
        _entities[7].properties[5],
      );

  /// See [TripEntity.isAccepted].
  static final isAccepted = obx.QueryBooleanProperty<TripEntity>(
    _entities[7].properties[6],
  );

  /// See [TripEntity.created].
  static final created = obx.QueryDateProperty<TripEntity>(
    _entities[7].properties[7],
  );

  /// See [TripEntity.updated].
  static final updated = obx.QueryDateProperty<TripEntity>(
    _entities[7].properties[8],
  );

  /// See [TripEntity.timeAccepted].
  static final timeAccepted = obx.QueryDateProperty<TripEntity>(
    _entities[7].properties[9],
  );

  /// See [TripEntity.deliveryTeam].
  static final deliveryTeam =
      obx.QueryRelationToOne<TripEntity, DeliveryTeamModel>(
        _entities[7].properties[10],
      );

  /// See [TripEntity.otp].
  static final otp = obx.QueryRelationToOne<TripEntity, OtpModel>(
    _entities[7].properties[11],
  );

  /// See [TripEntity.endTripOtp].
  static final endTripOtp = obx.QueryRelationToOne<TripEntity, EndTripOtpModel>(
    _entities[7].properties[12],
  );

  /// See [TripEntity.isEndTrip].
  static final isEndTrip = obx.QueryBooleanProperty<TripEntity>(
    _entities[7].properties[13],
  );

  /// See [TripEntity.timeEndTrip].
  static final timeEndTrip = obx.QueryDateProperty<TripEntity>(
    _entities[7].properties[14],
  );

  /// See [TripEntity.totalTripDistance].
  static final totalTripDistance = obx.QueryStringProperty<TripEntity>(
    _entities[7].properties[15],
  );

  /// See [TripEntity.qrCode].
  static final qrCode = obx.QueryStringProperty<TripEntity>(
    _entities[7].properties[16],
  );

  /// See [TripEntity.user].
  static final user = obx.QueryRelationToOne<TripEntity, LocalUsersModel>(
    _entities[7].properties[17],
  );

  /// See [TripEntity.latitude].
  static final latitude = obx.QueryDoubleProperty<TripEntity>(
    _entities[7].properties[18],
  );

  /// See [TripEntity.longitude].
  static final longitude = obx.QueryDoubleProperty<TripEntity>(
    _entities[7].properties[19],
  );

  /// See [TripEntity.deliveryVehicle].
  static final deliveryVehicle =
      obx.QueryRelationToOne<TripEntity, DeliveryVehicleModel>(
        _entities[7].properties[20],
      );

  /// see [TripEntity.personels]
  static final personels = obx.QueryRelationToMany<TripEntity, PersonelModel>(
    _entities[7].relations[0],
  );

  /// see [TripEntity.checklist]
  static final checklist = obx.QueryRelationToMany<TripEntity, ChecklistModel>(
    _entities[7].relations[1],
  );

  /// see [TripEntity.vehicle]
  static final vehicle = obx.QueryRelationToMany<TripEntity, VehicleModel>(
    _entities[7].relations[2],
  );

  /// see [TripEntity.endTripChecklist]
  static final endTripChecklist =
      obx.QueryRelationToMany<TripEntity, EndTripChecklistModel>(
        _entities[7].relations[3],
      );

  /// see [TripEntity.tripUpdates]
  static final tripUpdates =
      obx.QueryRelationToMany<TripEntity, TripUpdateModel>(
        _entities[7].relations[4],
      );

  /// see [TripEntity.deliveryData]
  static final deliveryData =
      obx.QueryRelationToMany<TripEntity, DeliveryDataModel>(
        _entities[7].relations[5],
      );
}

/// [TripModel] entity fields to define ObjectBox queries.
class TripModel_ {
  /// See [TripModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<TripModel>(
    _entities[8].properties[0],
  );

  /// See [TripModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<TripModel>(
    _entities[8].properties[1],
  );
}

/// [UpdateTimelineEntity] entity fields to define ObjectBox queries.
class UpdateTimelineEntity_ {
  /// See [UpdateTimelineEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<UpdateTimelineEntity>(
    _entities[9].properties[0],
  );

  /// See [UpdateTimelineEntity.id].
  static final id = obx.QueryStringProperty<UpdateTimelineEntity>(
    _entities[9].properties[1],
  );

  /// See [UpdateTimelineEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<UpdateTimelineEntity>(
    _entities[9].properties[2],
  );

  /// See [UpdateTimelineEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<UpdateTimelineEntity>(
    _entities[9].properties[3],
  );

  /// See [UpdateTimelineEntity.created].
  static final created = obx.QueryDateProperty<UpdateTimelineEntity>(
    _entities[9].properties[4],
  );

  /// See [UpdateTimelineEntity.updated].
  static final updated = obx.QueryDateProperty<UpdateTimelineEntity>(
    _entities[9].properties[5],
  );
}

/// [UpdateTimelineModel] entity fields to define ObjectBox queries.
class UpdateTimelineModel_ {
  /// See [UpdateTimelineModel.dbId].
  static final dbId = obx.QueryIntegerProperty<UpdateTimelineModel>(
    _entities[10].properties[0],
  );

  /// See [UpdateTimelineModel.id].
  static final id = obx.QueryStringProperty<UpdateTimelineModel>(
    _entities[10].properties[1],
  );

  /// See [UpdateTimelineModel.collectionId].
  static final collectionId = obx.QueryStringProperty<UpdateTimelineModel>(
    _entities[10].properties[2],
  );

  /// See [UpdateTimelineModel.collectionName].
  static final collectionName = obx.QueryStringProperty<UpdateTimelineModel>(
    _entities[10].properties[3],
  );

  /// See [UpdateTimelineModel.created].
  static final created = obx.QueryDateProperty<UpdateTimelineModel>(
    _entities[10].properties[4],
  );

  /// See [UpdateTimelineModel.updated].
  static final updated = obx.QueryDateProperty<UpdateTimelineModel>(
    _entities[10].properties[5],
  );
}

/// [VehicleEntity] entity fields to define ObjectBox queries.
class VehicleEntity_ {
  /// See [VehicleEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<VehicleEntity>(
    _entities[11].properties[0],
  );

  /// See [VehicleEntity.id].
  static final id = obx.QueryStringProperty<VehicleEntity>(
    _entities[11].properties[1],
  );

  /// See [VehicleEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<VehicleEntity>(
    _entities[11].properties[2],
  );

  /// See [VehicleEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<VehicleEntity>(
    _entities[11].properties[3],
  );

  /// See [VehicleEntity.vehicleName].
  static final vehicleName = obx.QueryStringProperty<VehicleEntity>(
    _entities[11].properties[4],
  );

  /// See [VehicleEntity.vehiclePlateNumber].
  static final vehiclePlateNumber = obx.QueryStringProperty<VehicleEntity>(
    _entities[11].properties[5],
  );

  /// See [VehicleEntity.vehicleType].
  static final vehicleType = obx.QueryStringProperty<VehicleEntity>(
    _entities[11].properties[6],
  );

  /// See [VehicleEntity.created].
  static final created = obx.QueryDateProperty<VehicleEntity>(
    _entities[11].properties[7],
  );

  /// See [VehicleEntity.updated].
  static final updated = obx.QueryDateProperty<VehicleEntity>(
    _entities[11].properties[8],
  );

  /// See [VehicleEntity.deliveryTeam].
  static final deliveryTeam =
      obx.QueryRelationToOne<VehicleEntity, DeliveryTeamModel>(
        _entities[11].properties[9],
      );

  /// See [VehicleEntity.trip].
  static final trip = obx.QueryRelationToOne<VehicleEntity, TripModel>(
    _entities[11].properties[10],
  );
}

/// [VehicleModel] entity fields to define ObjectBox queries.
class VehicleModel_ {
  /// See [VehicleModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<VehicleModel>(
    _entities[12].properties[0],
  );

  /// See [VehicleModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<VehicleModel>(
    _entities[12].properties[1],
  );

  /// See [VehicleModel.tripId].
  static final tripId = obx.QueryStringProperty<VehicleModel>(
    _entities[12].properties[2],
  );

  /// See [VehicleModel.deliveryTeamId].
  static final deliveryTeamId = obx.QueryStringProperty<VehicleModel>(
    _entities[12].properties[3],
  );
}

/// [DeliveryTeamEntity] entity fields to define ObjectBox queries.
class DeliveryTeamEntity_ {
  /// See [DeliveryTeamEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<DeliveryTeamEntity>(
    _entities[13].properties[0],
  );

  /// See [DeliveryTeamEntity.id].
  static final id = obx.QueryStringProperty<DeliveryTeamEntity>(
    _entities[13].properties[1],
  );

  /// See [DeliveryTeamEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<DeliveryTeamEntity>(
    _entities[13].properties[2],
  );

  /// See [DeliveryTeamEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<DeliveryTeamEntity>(
    _entities[13].properties[3],
  );

  /// See [DeliveryTeamEntity.activeDeliveries].
  static final activeDeliveries = obx.QueryIntegerProperty<DeliveryTeamEntity>(
    _entities[13].properties[4],
  );

  /// See [DeliveryTeamEntity.totalDelivered].
  static final totalDelivered = obx.QueryIntegerProperty<DeliveryTeamEntity>(
    _entities[13].properties[5],
  );

  /// See [DeliveryTeamEntity.totalDistanceTravelled].
  static final totalDistanceTravelled =
      obx.QueryDoubleProperty<DeliveryTeamEntity>(_entities[13].properties[6]);

  /// See [DeliveryTeamEntity.created].
  static final created = obx.QueryDateProperty<DeliveryTeamEntity>(
    _entities[13].properties[7],
  );

  /// See [DeliveryTeamEntity.updated].
  static final updated = obx.QueryDateProperty<DeliveryTeamEntity>(
    _entities[13].properties[8],
  );

  /// See [DeliveryTeamEntity.undeliveredCustomers].
  static final undeliveredCustomers =
      obx.QueryIntegerProperty<DeliveryTeamEntity>(_entities[13].properties[9]);

  /// See [DeliveryTeamEntity.trip].
  static final trip = obx.QueryRelationToOne<DeliveryTeamEntity, TripModel>(
    _entities[13].properties[10],
  );

  /// See [DeliveryTeamEntity.deliveryVehicle].
  static final deliveryVehicle =
      obx.QueryRelationToOne<DeliveryTeamEntity, DeliveryVehicleModel>(
        _entities[13].properties[11],
      );

  /// see [DeliveryTeamEntity.personels]
  static final personels =
      obx.QueryRelationToMany<DeliveryTeamEntity, PersonelModel>(
        _entities[13].relations[0],
      );

  /// see [DeliveryTeamEntity.checklist]
  static final checklist =
      obx.QueryRelationToMany<DeliveryTeamEntity, ChecklistModel>(
        _entities[13].relations[1],
      );

  /// see [DeliveryTeamEntity.vehicle]
  static final vehicle =
      obx.QueryRelationToMany<DeliveryTeamEntity, VehicleModel>(
        _entities[13].relations[2],
      );
}

/// [OtpModel] entity fields to define ObjectBox queries.
class OtpModel_ {
  /// See [OtpModel.dbId].
  static final dbId = obx.QueryIntegerProperty<OtpModel>(
    _entities[14].properties[0],
  );

  /// See [OtpModel.id].
  static final id = obx.QueryStringProperty<OtpModel>(
    _entities[14].properties[1],
  );

  /// See [OtpModel.otpCode].
  static final otpCode = obx.QueryStringProperty<OtpModel>(
    _entities[14].properties[2],
  );

  /// See [OtpModel.generatedCode].
  static final generatedCode = obx.QueryStringProperty<OtpModel>(
    _entities[14].properties[3],
  );

  /// See [OtpModel.isVerified].
  static final isVerified = obx.QueryBooleanProperty<OtpModel>(
    _entities[14].properties[4],
  );

  /// See [OtpModel.createdAt].
  static final createdAt = obx.QueryDateProperty<OtpModel>(
    _entities[14].properties[5],
  );

  /// See [OtpModel.expiresAt].
  static final expiresAt = obx.QueryDateProperty<OtpModel>(
    _entities[14].properties[6],
  );

  /// See [OtpModel.verifiedAt].
  static final verifiedAt = obx.QueryDateProperty<OtpModel>(
    _entities[14].properties[7],
  );

  /// See [OtpModel.trip].
  static final trip = obx.QueryRelationToOne<OtpModel, TripModel>(
    _entities[14].properties[8],
  );
}

/// [LocalUsersModel] entity fields to define ObjectBox queries.
class LocalUsersModel_ {
  /// See [LocalUsersModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<LocalUsersModel>(
    _entities[15].properties[0],
  );

  /// See [LocalUsersModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<LocalUsersModel>(
    _entities[15].properties[1],
  );

  /// See [LocalUsersModel.tripId].
  static final tripId = obx.QueryStringProperty<LocalUsersModel>(
    _entities[15].properties[2],
  );

  /// See [LocalUsersModel.deliveryTeamId].
  static final deliveryTeamId = obx.QueryStringProperty<LocalUsersModel>(
    _entities[15].properties[3],
  );

  /// See [LocalUsersModel.token].
  static final token = obx.QueryStringProperty<LocalUsersModel>(
    _entities[15].properties[4],
  );
}

/// [DeliveryTeamModel] entity fields to define ObjectBox queries.
class DeliveryTeamModel_ {
  /// See [DeliveryTeamModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<DeliveryTeamModel>(
    _entities[16].properties[0],
  );

  /// See [DeliveryTeamModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<DeliveryTeamModel>(
    _entities[16].properties[1],
  );

  /// See [DeliveryTeamModel.tripId].
  static final tripId = obx.QueryStringProperty<DeliveryTeamModel>(
    _entities[16].properties[2],
  );
}

/// [EndChecklistEntity] entity fields to define ObjectBox queries.
class EndChecklistEntity_ {
  /// See [EndChecklistEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<EndChecklistEntity>(
    _entities[17].properties[0],
  );

  /// See [EndChecklistEntity.id].
  static final id = obx.QueryStringProperty<EndChecklistEntity>(
    _entities[17].properties[1],
  );

  /// See [EndChecklistEntity.objectName].
  static final objectName = obx.QueryStringProperty<EndChecklistEntity>(
    _entities[17].properties[2],
  );

  /// See [EndChecklistEntity.isChecked].
  static final isChecked = obx.QueryBooleanProperty<EndChecklistEntity>(
    _entities[17].properties[3],
  );

  /// See [EndChecklistEntity.status].
  static final status = obx.QueryStringProperty<EndChecklistEntity>(
    _entities[17].properties[4],
  );

  /// See [EndChecklistEntity.timeCompleted].
  static final timeCompleted = obx.QueryDateProperty<EndChecklistEntity>(
    _entities[17].properties[5],
  );

  /// See [EndChecklistEntity.trip].
  static final trip = obx.QueryStringProperty<EndChecklistEntity>(
    _entities[17].properties[6],
  );
}

/// [EndTripChecklistModel] entity fields to define ObjectBox queries.
class EndTripChecklistModel_ {
  /// See [EndTripChecklistModel.dbId].
  static final dbId = obx.QueryIntegerProperty<EndTripChecklistModel>(
    _entities[18].properties[0],
  );

  /// See [EndTripChecklistModel.id].
  static final id = obx.QueryStringProperty<EndTripChecklistModel>(
    _entities[18].properties[1],
  );

  /// See [EndTripChecklistModel.objectName].
  static final objectName = obx.QueryStringProperty<EndTripChecklistModel>(
    _entities[18].properties[2],
  );

  /// See [EndTripChecklistModel.isChecked].
  static final isChecked = obx.QueryBooleanProperty<EndTripChecklistModel>(
    _entities[18].properties[3],
  );

  /// See [EndTripChecklistModel.status].
  static final status = obx.QueryStringProperty<EndTripChecklistModel>(
    _entities[18].properties[4],
  );

  /// See [EndTripChecklistModel.trip].
  static final trip = obx.QueryStringProperty<EndTripChecklistModel>(
    _entities[18].properties[5],
  );
}

/// [TripUpdateEntity] entity fields to define ObjectBox queries.
class TripUpdateEntity_ {
  /// See [TripUpdateEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<TripUpdateEntity>(
    _entities[19].properties[0],
  );

  /// See [TripUpdateEntity.id].
  static final id = obx.QueryStringProperty<TripUpdateEntity>(
    _entities[19].properties[1],
  );

  /// See [TripUpdateEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<TripUpdateEntity>(
    _entities[19].properties[2],
  );

  /// See [TripUpdateEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<TripUpdateEntity>(
    _entities[19].properties[3],
  );

  /// See [TripUpdateEntity.date].
  static final date = obx.QueryDateProperty<TripUpdateEntity>(
    _entities[19].properties[4],
  );

  /// See [TripUpdateEntity.image].
  static final image = obx.QueryStringProperty<TripUpdateEntity>(
    _entities[19].properties[5],
  );

  /// See [TripUpdateEntity.description].
  static final description = obx.QueryStringProperty<TripUpdateEntity>(
    _entities[19].properties[6],
  );

  /// See [TripUpdateEntity.latitude].
  static final latitude = obx.QueryStringProperty<TripUpdateEntity>(
    _entities[19].properties[7],
  );

  /// See [TripUpdateEntity.longitude].
  static final longitude = obx.QueryStringProperty<TripUpdateEntity>(
    _entities[19].properties[8],
  );

  /// See [TripUpdateEntity.trip].
  static final trip = obx.QueryRelationToOne<TripUpdateEntity, TripModel>(
    _entities[19].properties[9],
  );
}

/// [TripUpdateModel] entity fields to define ObjectBox queries.
class TripUpdateModel_ {
  /// See [TripUpdateModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<TripUpdateModel>(
    _entities[20].properties[0],
  );

  /// See [TripUpdateModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<TripUpdateModel>(
    _entities[20].properties[1],
  );

  /// See [TripUpdateModel.tripId].
  static final tripId = obx.QueryStringProperty<TripUpdateModel>(
    _entities[20].properties[2],
  );
}

/// [EndTripOtpModel] entity fields to define ObjectBox queries.
class EndTripOtpModel_ {
  /// See [EndTripOtpModel.dbId].
  static final dbId = obx.QueryIntegerProperty<EndTripOtpModel>(
    _entities[21].properties[0],
  );

  /// See [EndTripOtpModel.id].
  static final id = obx.QueryStringProperty<EndTripOtpModel>(
    _entities[21].properties[1],
  );

  /// See [EndTripOtpModel.otpCode].
  static final otpCode = obx.QueryStringProperty<EndTripOtpModel>(
    _entities[21].properties[2],
  );

  /// See [EndTripOtpModel.generatedCode].
  static final generatedCode = obx.QueryStringProperty<EndTripOtpModel>(
    _entities[21].properties[3],
  );

  /// See [EndTripOtpModel.isVerified].
  static final isVerified = obx.QueryBooleanProperty<EndTripOtpModel>(
    _entities[21].properties[4],
  );

  /// See [EndTripOtpModel.createdAt].
  static final createdAt = obx.QueryDateProperty<EndTripOtpModel>(
    _entities[21].properties[5],
  );

  /// See [EndTripOtpModel.expiresAt].
  static final expiresAt = obx.QueryDateProperty<EndTripOtpModel>(
    _entities[21].properties[6],
  );

  /// See [EndTripOtpModel.verifiedAt].
  static final verifiedAt = obx.QueryDateProperty<EndTripOtpModel>(
    _entities[21].properties[7],
  );

  /// See [EndTripOtpModel.trip].
  static final trip = obx.QueryRelationToOne<EndTripOtpModel, TripModel>(
    _entities[21].properties[8],
  );
}

/// [EndTripOtpEntity] entity fields to define ObjectBox queries.
class EndTripOtpEntity_ {
  /// See [EndTripOtpEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<EndTripOtpEntity>(
    _entities[22].properties[0],
  );

  /// See [EndTripOtpEntity.id].
  static final id = obx.QueryStringProperty<EndTripOtpEntity>(
    _entities[22].properties[1],
  );

  /// See [EndTripOtpEntity.otpCode].
  static final otpCode = obx.QueryStringProperty<EndTripOtpEntity>(
    _entities[22].properties[2],
  );

  /// See [EndTripOtpEntity.generatedCode].
  static final generatedCode = obx.QueryStringProperty<EndTripOtpEntity>(
    _entities[22].properties[3],
  );

  /// See [EndTripOtpEntity.isVerified].
  static final isVerified = obx.QueryBooleanProperty<EndTripOtpEntity>(
    _entities[22].properties[4],
  );

  /// See [EndTripOtpEntity.createdAt].
  static final createdAt = obx.QueryDateProperty<EndTripOtpEntity>(
    _entities[22].properties[5],
  );

  /// See [EndTripOtpEntity.expiresAt].
  static final expiresAt = obx.QueryDateProperty<EndTripOtpEntity>(
    _entities[22].properties[6],
  );

  /// See [EndTripOtpEntity.verifiedAt].
  static final verifiedAt = obx.QueryDateProperty<EndTripOtpEntity>(
    _entities[22].properties[7],
  );

  /// See [EndTripOtpEntity.trip].
  static final trip = obx.QueryRelationToOne<EndTripOtpEntity, TripModel>(
    _entities[22].properties[8],
  );

  /// See [EndTripOtpEntity.endTripOdometer].
  static final endTripOdometer = obx.QueryStringProperty<EndTripOtpEntity>(
    _entities[22].properties[9],
  );
}

/// [OtpEntity] entity fields to define ObjectBox queries.
class OtpEntity_ {
  /// See [OtpEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<OtpEntity>(
    _entities[23].properties[0],
  );

  /// See [OtpEntity.id].
  static final id = obx.QueryStringProperty<OtpEntity>(
    _entities[23].properties[1],
  );

  /// See [OtpEntity.otpCode].
  static final otpCode = obx.QueryStringProperty<OtpEntity>(
    _entities[23].properties[2],
  );

  /// See [OtpEntity.generatedCode].
  static final generatedCode = obx.QueryStringProperty<OtpEntity>(
    _entities[23].properties[3],
  );

  /// See [OtpEntity.isVerified].
  static final isVerified = obx.QueryBooleanProperty<OtpEntity>(
    _entities[23].properties[4],
  );

  /// See [OtpEntity.createdAt].
  static final createdAt = obx.QueryDateProperty<OtpEntity>(
    _entities[23].properties[5],
  );

  /// See [OtpEntity.expiresAt].
  static final expiresAt = obx.QueryDateProperty<OtpEntity>(
    _entities[23].properties[6],
  );

  /// See [OtpEntity.verifiedAt].
  static final verifiedAt = obx.QueryDateProperty<OtpEntity>(
    _entities[23].properties[7],
  );

  /// See [OtpEntity.trip].
  static final trip = obx.QueryRelationToOne<OtpEntity, TripModel>(
    _entities[23].properties[8],
  );

  /// See [OtpEntity.intransitOdometer].
  static final intransitOdometer = obx.QueryStringProperty<OtpEntity>(
    _entities[23].properties[9],
  );
}

/// [CustomerDataEntity] entity fields to define ObjectBox queries.
class CustomerDataEntity_ {
  /// See [CustomerDataEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<CustomerDataEntity>(
    _entities[24].properties[0],
  );

  /// See [CustomerDataEntity.id].
  static final id = obx.QueryStringProperty<CustomerDataEntity>(
    _entities[24].properties[1],
  );

  /// See [CustomerDataEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<CustomerDataEntity>(
    _entities[24].properties[2],
  );

  /// See [CustomerDataEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<CustomerDataEntity>(
    _entities[24].properties[3],
  );

  /// See [CustomerDataEntity.name].
  static final name = obx.QueryStringProperty<CustomerDataEntity>(
    _entities[24].properties[4],
  );

  /// See [CustomerDataEntity.refId].
  static final refId = obx.QueryStringProperty<CustomerDataEntity>(
    _entities[24].properties[5],
  );

  /// See [CustomerDataEntity.province].
  static final province = obx.QueryStringProperty<CustomerDataEntity>(
    _entities[24].properties[6],
  );

  /// See [CustomerDataEntity.municipality].
  static final municipality = obx.QueryStringProperty<CustomerDataEntity>(
    _entities[24].properties[7],
  );

  /// See [CustomerDataEntity.barangay].
  static final barangay = obx.QueryStringProperty<CustomerDataEntity>(
    _entities[24].properties[8],
  );

  /// See [CustomerDataEntity.longitude].
  static final longitude = obx.QueryDoubleProperty<CustomerDataEntity>(
    _entities[24].properties[9],
  );

  /// See [CustomerDataEntity.latitude].
  static final latitude = obx.QueryDoubleProperty<CustomerDataEntity>(
    _entities[24].properties[10],
  );

  /// See [CustomerDataEntity.created].
  static final created = obx.QueryDateProperty<CustomerDataEntity>(
    _entities[24].properties[11],
  );

  /// See [CustomerDataEntity.updated].
  static final updated = obx.QueryDateProperty<CustomerDataEntity>(
    _entities[24].properties[12],
  );

  /// See [CustomerDataEntity.paymentMode].
  static final paymentMode = obx.QueryStringProperty<CustomerDataEntity>(
    _entities[24].properties[13],
  );

  /// See [CustomerDataEntity.ownerName].
  static final ownerName = obx.QueryStringProperty<CustomerDataEntity>(
    _entities[24].properties[14],
  );

  /// See [CustomerDataEntity.contactNumber].
  static final contactNumber = obx.QueryStringProperty<CustomerDataEntity>(
    _entities[24].properties[15],
  );
}

/// [CustomerDataModel] entity fields to define ObjectBox queries.
class CustomerDataModel_ {
  /// See [CustomerDataModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<CustomerDataModel>(
    _entities[25].properties[0],
  );

  /// See [CustomerDataModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<CustomerDataModel>(
    _entities[25].properties[1],
  );
}

/// [DeliveryDataEntity] entity fields to define ObjectBox queries.
class DeliveryDataEntity_ {
  /// See [DeliveryDataEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<DeliveryDataEntity>(
    _entities[26].properties[0],
  );

  /// See [DeliveryDataEntity.id].
  static final id = obx.QueryStringProperty<DeliveryDataEntity>(
    _entities[26].properties[1],
  );

  /// See [DeliveryDataEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<DeliveryDataEntity>(
    _entities[26].properties[2],
  );

  /// See [DeliveryDataEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<DeliveryDataEntity>(
    _entities[26].properties[3],
  );

  /// See [DeliveryDataEntity.customer].
  static final customer =
      obx.QueryRelationToOne<DeliveryDataEntity, CustomerDataModel>(
        _entities[26].properties[4],
      );

  /// See [DeliveryDataEntity.invoice].
  static final invoice =
      obx.QueryRelationToOne<DeliveryDataEntity, InvoiceDataModel>(
        _entities[26].properties[5],
      );

  /// See [DeliveryDataEntity.trip].
  static final trip = obx.QueryRelationToOne<DeliveryDataEntity, TripModel>(
    _entities[26].properties[6],
  );

  /// See [DeliveryDataEntity.created].
  static final created = obx.QueryDateProperty<DeliveryDataEntity>(
    _entities[26].properties[7],
  );

  /// See [DeliveryDataEntity.updated].
  static final updated = obx.QueryDateProperty<DeliveryDataEntity>(
    _entities[26].properties[8],
  );

  /// See [DeliveryDataEntity.hasTrip].
  static final hasTrip = obx.QueryBooleanProperty<DeliveryDataEntity>(
    _entities[26].properties[9],
  );

  /// See [DeliveryDataEntity.paymentMode].
  static final paymentMode = obx.QueryStringProperty<DeliveryDataEntity>(
    _entities[26].properties[10],
  );

  /// See [DeliveryDataEntity.deliveryNumber].
  static final deliveryNumber = obx.QueryStringProperty<DeliveryDataEntity>(
    _entities[26].properties[11],
  );

  /// See [DeliveryDataEntity.totalDeliveryTime].
  static final totalDeliveryTime = obx.QueryStringProperty<DeliveryDataEntity>(
    _entities[26].properties[12],
  );

  /// see [DeliveryDataEntity.deliveryUpdates]
  static final deliveryUpdates =
      obx.QueryRelationToMany<DeliveryDataEntity, DeliveryUpdateEntity>(
        _entities[26].relations[0],
      );

  /// see [DeliveryDataEntity.invoiceItems]
  static final invoiceItems =
      obx.QueryRelationToMany<DeliveryDataEntity, InvoiceItemsModel>(
        _entities[26].relations[1],
      );
}

/// [DeliveryDataModel] entity fields to define ObjectBox queries.
class DeliveryDataModel_ {
  /// See [DeliveryDataModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<DeliveryDataModel>(
    _entities[27].properties[0],
  );

  /// See [DeliveryDataModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<DeliveryDataModel>(
    _entities[27].properties[1],
  );

  /// See [DeliveryDataModel.tripId].
  static final tripId = obx.QueryStringProperty<DeliveryDataModel>(
    _entities[27].properties[2],
  );
}

/// [DeliveryVehicleEntity] entity fields to define ObjectBox queries.
class DeliveryVehicleEntity_ {
  /// See [DeliveryVehicleEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<DeliveryVehicleEntity>(
    _entities[28].properties[0],
  );

  /// See [DeliveryVehicleEntity.id].
  static final id = obx.QueryStringProperty<DeliveryVehicleEntity>(
    _entities[28].properties[1],
  );

  /// See [DeliveryVehicleEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<DeliveryVehicleEntity>(
    _entities[28].properties[2],
  );

  /// See [DeliveryVehicleEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<DeliveryVehicleEntity>(
    _entities[28].properties[3],
  );

  /// See [DeliveryVehicleEntity.name].
  static final name = obx.QueryStringProperty<DeliveryVehicleEntity>(
    _entities[28].properties[4],
  );

  /// See [DeliveryVehicleEntity.plateNo].
  static final plateNo = obx.QueryStringProperty<DeliveryVehicleEntity>(
    _entities[28].properties[5],
  );

  /// See [DeliveryVehicleEntity.make].
  static final make = obx.QueryStringProperty<DeliveryVehicleEntity>(
    _entities[28].properties[6],
  );

  /// See [DeliveryVehicleEntity.type].
  static final type = obx.QueryStringProperty<DeliveryVehicleEntity>(
    _entities[28].properties[7],
  );

  /// See [DeliveryVehicleEntity.wheels].
  static final wheels = obx.QueryStringProperty<DeliveryVehicleEntity>(
    _entities[28].properties[8],
  );

  /// See [DeliveryVehicleEntity.volumeCapacity].
  static final volumeCapacity = obx.QueryDoubleProperty<DeliveryVehicleEntity>(
    _entities[28].properties[9],
  );

  /// See [DeliveryVehicleEntity.weightCapacity].
  static final weightCapacity = obx.QueryDoubleProperty<DeliveryVehicleEntity>(
    _entities[28].properties[10],
  );

  /// See [DeliveryVehicleEntity.created].
  static final created = obx.QueryDateProperty<DeliveryVehicleEntity>(
    _entities[28].properties[11],
  );

  /// See [DeliveryVehicleEntity.updated].
  static final updated = obx.QueryDateProperty<DeliveryVehicleEntity>(
    _entities[28].properties[12],
  );
}

/// [DeliveryVehicleModel] entity fields to define ObjectBox queries.
class DeliveryVehicleModel_ {
  /// See [DeliveryVehicleModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<DeliveryVehicleModel>(
    _entities[29].properties[0],
  );

  /// See [DeliveryVehicleModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<DeliveryVehicleModel>(
    _entities[29].properties[1],
  );

  /// See [DeliveryVehicleModel.tripId].
  static final tripId = obx.QueryStringProperty<DeliveryVehicleModel>(
    _entities[29].properties[2],
  );
}

/// [InvoiceDataEntity] entity fields to define ObjectBox queries.
class InvoiceDataEntity_ {
  /// See [InvoiceDataEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<InvoiceDataEntity>(
    _entities[30].properties[0],
  );

  /// See [InvoiceDataEntity.id].
  static final id = obx.QueryStringProperty<InvoiceDataEntity>(
    _entities[30].properties[1],
  );

  /// See [InvoiceDataEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<InvoiceDataEntity>(
    _entities[30].properties[2],
  );

  /// See [InvoiceDataEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<InvoiceDataEntity>(
    _entities[30].properties[3],
  );

  /// See [InvoiceDataEntity.refId].
  static final refId = obx.QueryStringProperty<InvoiceDataEntity>(
    _entities[30].properties[4],
  );

  /// See [InvoiceDataEntity.name].
  static final name = obx.QueryStringProperty<InvoiceDataEntity>(
    _entities[30].properties[5],
  );

  /// See [InvoiceDataEntity.documentDate].
  static final documentDate = obx.QueryDateProperty<InvoiceDataEntity>(
    _entities[30].properties[6],
  );

  /// See [InvoiceDataEntity.totalAmount].
  static final totalAmount = obx.QueryDoubleProperty<InvoiceDataEntity>(
    _entities[30].properties[7],
  );

  /// See [InvoiceDataEntity.volume].
  static final volume = obx.QueryDoubleProperty<InvoiceDataEntity>(
    _entities[30].properties[8],
  );

  /// See [InvoiceDataEntity.weight].
  static final weight = obx.QueryDoubleProperty<InvoiceDataEntity>(
    _entities[30].properties[9],
  );

  /// See [InvoiceDataEntity.customer].
  static final customer =
      obx.QueryRelationToOne<InvoiceDataEntity, CustomerDataEntity>(
        _entities[30].properties[10],
      );

  /// See [InvoiceDataEntity.created].
  static final created = obx.QueryDateProperty<InvoiceDataEntity>(
    _entities[30].properties[11],
  );

  /// See [InvoiceDataEntity.updated].
  static final updated = obx.QueryDateProperty<InvoiceDataEntity>(
    _entities[30].properties[12],
  );
}

/// [InvoiceDataModel] entity fields to define ObjectBox queries.
class InvoiceDataModel_ {
  /// See [InvoiceDataModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<InvoiceDataModel>(
    _entities[31].properties[0],
  );

  /// See [InvoiceDataModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<InvoiceDataModel>(
    _entities[31].properties[1],
  );
}

/// [InvoiceItemsEntity] entity fields to define ObjectBox queries.
class InvoiceItemsEntity_ {
  /// See [InvoiceItemsEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<InvoiceItemsEntity>(
    _entities[32].properties[0],
  );

  /// See [InvoiceItemsEntity.id].
  static final id = obx.QueryStringProperty<InvoiceItemsEntity>(
    _entities[32].properties[1],
  );

  /// See [InvoiceItemsEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<InvoiceItemsEntity>(
    _entities[32].properties[2],
  );

  /// See [InvoiceItemsEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<InvoiceItemsEntity>(
    _entities[32].properties[3],
  );

  /// See [InvoiceItemsEntity.name].
  static final name = obx.QueryStringProperty<InvoiceItemsEntity>(
    _entities[32].properties[4],
  );

  /// See [InvoiceItemsEntity.brand].
  static final brand = obx.QueryStringProperty<InvoiceItemsEntity>(
    _entities[32].properties[5],
  );

  /// See [InvoiceItemsEntity.refId].
  static final refId = obx.QueryStringProperty<InvoiceItemsEntity>(
    _entities[32].properties[6],
  );

  /// See [InvoiceItemsEntity.uom].
  static final uom = obx.QueryStringProperty<InvoiceItemsEntity>(
    _entities[32].properties[7],
  );

  /// See [InvoiceItemsEntity.quantity].
  static final quantity = obx.QueryDoubleProperty<InvoiceItemsEntity>(
    _entities[32].properties[8],
  );

  /// See [InvoiceItemsEntity.totalBaseQuantity].
  static final totalBaseQuantity = obx.QueryDoubleProperty<InvoiceItemsEntity>(
    _entities[32].properties[9],
  );

  /// See [InvoiceItemsEntity.uomPrice].
  static final uomPrice = obx.QueryDoubleProperty<InvoiceItemsEntity>(
    _entities[32].properties[10],
  );

  /// See [InvoiceItemsEntity.totalAmount].
  static final totalAmount = obx.QueryDoubleProperty<InvoiceItemsEntity>(
    _entities[32].properties[11],
  );

  /// See [InvoiceItemsEntity.invoiceData].
  static final invoiceData =
      obx.QueryRelationToOne<InvoiceItemsEntity, InvoiceDataEntity>(
        _entities[32].properties[12],
      );

  /// See [InvoiceItemsEntity.created].
  static final created = obx.QueryDateProperty<InvoiceItemsEntity>(
    _entities[32].properties[13],
  );

  /// See [InvoiceItemsEntity.updated].
  static final updated = obx.QueryDateProperty<InvoiceItemsEntity>(
    _entities[32].properties[14],
  );
}

/// [InvoiceItemsModel] entity fields to define ObjectBox queries.
class InvoiceItemsModel_ {
  /// See [InvoiceItemsModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<InvoiceItemsModel>(
    _entities[33].properties[0],
  );

  /// See [InvoiceItemsModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<InvoiceItemsModel>(
    _entities[33].properties[1],
  );

  /// See [InvoiceItemsModel.invoiceDataId].
  static final invoiceDataId = obx.QueryStringProperty<InvoiceItemsModel>(
    _entities[33].properties[2],
  );
}

/// [CancelledInvoiceEntity] entity fields to define ObjectBox queries.
class CancelledInvoiceEntity_ {
  /// See [CancelledInvoiceEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<CancelledInvoiceEntity>(
    _entities[34].properties[0],
  );

  /// See [CancelledInvoiceEntity.id].
  static final id = obx.QueryStringProperty<CancelledInvoiceEntity>(
    _entities[34].properties[1],
  );

  /// See [CancelledInvoiceEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<CancelledInvoiceEntity>(
    _entities[34].properties[2],
  );

  /// See [CancelledInvoiceEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<CancelledInvoiceEntity>(
    _entities[34].properties[3],
  );

  /// See [CancelledInvoiceEntity.deliveryData].
  static final deliveryData =
      obx.QueryRelationToOne<CancelledInvoiceEntity, DeliveryDataModel>(
        _entities[34].properties[4],
      );

  /// See [CancelledInvoiceEntity.trip].
  static final trip = obx.QueryRelationToOne<CancelledInvoiceEntity, TripModel>(
    _entities[34].properties[5],
  );

  /// See [CancelledInvoiceEntity.image].
  static final image = obx.QueryStringProperty<CancelledInvoiceEntity>(
    _entities[34].properties[6],
  );

  /// See [CancelledInvoiceEntity.created].
  static final created = obx.QueryDateProperty<CancelledInvoiceEntity>(
    _entities[34].properties[7],
  );

  /// See [CancelledInvoiceEntity.updated].
  static final updated = obx.QueryDateProperty<CancelledInvoiceEntity>(
    _entities[34].properties[8],
  );

  /// See [CancelledInvoiceEntity.customer].
  static final customer =
      obx.QueryRelationToOne<CancelledInvoiceEntity, CustomerDataModel>(
        _entities[34].properties[9],
      );

  /// See [CancelledInvoiceEntity.invoice].
  static final invoice =
      obx.QueryRelationToOne<CancelledInvoiceEntity, InvoiceDataModel>(
        _entities[34].properties[10],
      );
}

/// [CancelledInvoiceModel] entity fields to define ObjectBox queries.
class CancelledInvoiceModel_ {
  /// See [CancelledInvoiceModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<CancelledInvoiceModel>(
    _entities[35].properties[0],
  );

  /// See [CancelledInvoiceModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<CancelledInvoiceModel>(
    _entities[35].properties[1],
  );

  /// See [CancelledInvoiceModel.deliveryDataId].
  static final deliveryDataId = obx.QueryStringProperty<CancelledInvoiceModel>(
    _entities[35].properties[2],
  );

  /// See [CancelledInvoiceModel.tripId].
  static final tripId = obx.QueryStringProperty<CancelledInvoiceModel>(
    _entities[35].properties[3],
  );

  /// See [CancelledInvoiceModel.customerId].
  static final customerId = obx.QueryStringProperty<CancelledInvoiceModel>(
    _entities[35].properties[4],
  );

  /// See [CancelledInvoiceModel.invoiceId].
  static final invoiceId = obx.QueryStringProperty<CancelledInvoiceModel>(
    _entities[35].properties[5],
  );
}

/// [CollectionEntity] entity fields to define ObjectBox queries.
class CollectionEntity_ {
  /// See [CollectionEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<CollectionEntity>(
    _entities[36].properties[0],
  );

  /// See [CollectionEntity.id].
  static final id = obx.QueryStringProperty<CollectionEntity>(
    _entities[36].properties[1],
  );

  /// See [CollectionEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<CollectionEntity>(
    _entities[36].properties[2],
  );

  /// See [CollectionEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<CollectionEntity>(
    _entities[36].properties[3],
  );

  /// See [CollectionEntity.deliveryData].
  static final deliveryData =
      obx.QueryRelationToOne<CollectionEntity, DeliveryDataModel>(
        _entities[36].properties[4],
      );

  /// See [CollectionEntity.trip].
  static final trip = obx.QueryRelationToOne<CollectionEntity, TripModel>(
    _entities[36].properties[5],
  );

  /// See [CollectionEntity.totalAmount].
  static final totalAmount = obx.QueryDoubleProperty<CollectionEntity>(
    _entities[36].properties[6],
  );

  /// See [CollectionEntity.created].
  static final created = obx.QueryDateProperty<CollectionEntity>(
    _entities[36].properties[7],
  );

  /// See [CollectionEntity.updated].
  static final updated = obx.QueryDateProperty<CollectionEntity>(
    _entities[36].properties[8],
  );

  /// See [CollectionEntity.customer].
  static final customer =
      obx.QueryRelationToOne<CollectionEntity, CustomerDataModel>(
        _entities[36].properties[9],
      );

  /// See [CollectionEntity.invoice].
  static final invoice =
      obx.QueryRelationToOne<CollectionEntity, InvoiceDataModel>(
        _entities[36].properties[10],
      );
}

/// [CollectionModel] entity fields to define ObjectBox queries.
class CollectionModel_ {
  /// See [CollectionModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<CollectionModel>(
    _entities[37].properties[0],
  );

  /// See [CollectionModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<CollectionModel>(
    _entities[37].properties[1],
  );

  /// See [CollectionModel.deliveryDataId].
  static final deliveryDataId = obx.QueryStringProperty<CollectionModel>(
    _entities[37].properties[2],
  );

  /// See [CollectionModel.tripId].
  static final tripId = obx.QueryStringProperty<CollectionModel>(
    _entities[37].properties[3],
  );

  /// See [CollectionModel.customerId].
  static final customerId = obx.QueryStringProperty<CollectionModel>(
    _entities[37].properties[4],
  );

  /// See [CollectionModel.invoiceId].
  static final invoiceId = obx.QueryStringProperty<CollectionModel>(
    _entities[37].properties[5],
  );
}

/// [DeliveryReceiptEntity] entity fields to define ObjectBox queries.
class DeliveryReceiptEntity_ {
  /// See [DeliveryReceiptEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<DeliveryReceiptEntity>(
    _entities[38].properties[0],
  );

  /// See [DeliveryReceiptEntity.id].
  static final id = obx.QueryStringProperty<DeliveryReceiptEntity>(
    _entities[38].properties[1],
  );

  /// See [DeliveryReceiptEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<DeliveryReceiptEntity>(
    _entities[38].properties[2],
  );

  /// See [DeliveryReceiptEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<DeliveryReceiptEntity>(
    _entities[38].properties[3],
  );

  /// See [DeliveryReceiptEntity.trip].
  static final trip = obx.QueryRelationToOne<DeliveryReceiptEntity, TripModel>(
    _entities[38].properties[4],
  );

  /// See [DeliveryReceiptEntity.deliveryData].
  static final deliveryData =
      obx.QueryRelationToOne<DeliveryReceiptEntity, DeliveryDataModel>(
        _entities[38].properties[5],
      );

  /// See [DeliveryReceiptEntity.status].
  static final status = obx.QueryStringProperty<DeliveryReceiptEntity>(
    _entities[38].properties[6],
  );

  /// See [DeliveryReceiptEntity.dateTimeCompleted].
  static final dateTimeCompleted = obx.QueryDateProperty<DeliveryReceiptEntity>(
    _entities[38].properties[7],
  );

  /// See [DeliveryReceiptEntity.created].
  static final created = obx.QueryDateProperty<DeliveryReceiptEntity>(
    _entities[38].properties[8],
  );

  /// See [DeliveryReceiptEntity.updated].
  static final updated = obx.QueryDateProperty<DeliveryReceiptEntity>(
    _entities[38].properties[9],
  );

  /// See [DeliveryReceiptEntity.customerImages].
  static final customerImages =
      obx.QueryStringVectorProperty<DeliveryReceiptEntity>(
        _entities[38].properties[10],
      );

  /// See [DeliveryReceiptEntity.customerSignature].
  static final customerSignature =
      obx.QueryStringProperty<DeliveryReceiptEntity>(
        _entities[38].properties[11],
      );

  /// See [DeliveryReceiptEntity.receiptFile].
  static final receiptFile = obx.QueryStringProperty<DeliveryReceiptEntity>(
    _entities[38].properties[12],
  );

  /// See [DeliveryReceiptEntity.totalAmount].
  static final totalAmount = obx.QueryDoubleProperty<DeliveryReceiptEntity>(
    _entities[38].properties[13],
  );
}

/// [DeliveryReceiptItemsEntity] entity fields to define ObjectBox queries.
class DeliveryReceiptItemsEntity_ {
  /// See [DeliveryReceiptItemsEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<DeliveryReceiptItemsEntity>(
    _entities[39].properties[0],
  );

  /// See [DeliveryReceiptItemsEntity.id].
  static final id = obx.QueryStringProperty<DeliveryReceiptItemsEntity>(
    _entities[39].properties[1],
  );

  /// See [DeliveryReceiptItemsEntity.collectionId].
  static final collectionId =
      obx.QueryStringProperty<DeliveryReceiptItemsEntity>(
        _entities[39].properties[2],
      );

  /// See [DeliveryReceiptItemsEntity.collectionName].
  static final collectionName =
      obx.QueryStringProperty<DeliveryReceiptItemsEntity>(
        _entities[39].properties[3],
      );

  /// See [DeliveryReceiptItemsEntity.deliveryReceipt].
  static final deliveryReceipt =
      obx.QueryRelationToOne<DeliveryReceiptItemsEntity, DeliveryReceiptModel>(
        _entities[39].properties[4],
      );

  /// See [DeliveryReceiptItemsEntity.status].
  static final status = obx.QueryStringProperty<DeliveryReceiptItemsEntity>(
    _entities[39].properties[5],
  );

  /// See [DeliveryReceiptItemsEntity.totalAmount].
  static final totalAmount =
      obx.QueryDoubleProperty<DeliveryReceiptItemsEntity>(
        _entities[39].properties[6],
      );

  /// See [DeliveryReceiptItemsEntity.customerImage].
  static final customerImage =
      obx.QueryStringProperty<DeliveryReceiptItemsEntity>(
        _entities[39].properties[7],
      );

  /// See [DeliveryReceiptItemsEntity.receiptFile].
  static final receiptFile =
      obx.QueryStringProperty<DeliveryReceiptItemsEntity>(
        _entities[39].properties[8],
      );

  /// See [DeliveryReceiptItemsEntity.created].
  static final created = obx.QueryDateProperty<DeliveryReceiptItemsEntity>(
    _entities[39].properties[9],
  );

  /// See [DeliveryReceiptItemsEntity.updated].
  static final updated = obx.QueryDateProperty<DeliveryReceiptItemsEntity>(
    _entities[39].properties[10],
  );

  /// see [DeliveryReceiptItemsEntity.invoiceItems]
  static final invoiceItems =
      obx.QueryRelationToMany<DeliveryReceiptItemsEntity, InvoiceItemsModel>(
        _entities[39].relations[0],
      );
}

/// [DeliveryReceiptItemsModel] entity fields to define ObjectBox queries.
class DeliveryReceiptItemsModel_ {
  /// See [DeliveryReceiptItemsModel.objectBoxId].
  static final objectBoxId =
      obx.QueryIntegerProperty<DeliveryReceiptItemsModel>(
        _entities[40].properties[0],
      );

  /// See [DeliveryReceiptItemsModel.pocketbaseId].
  static final pocketbaseId =
      obx.QueryStringProperty<DeliveryReceiptItemsModel>(
        _entities[40].properties[1],
      );

  /// See [DeliveryReceiptItemsModel.deliveryReceiptId].
  static final deliveryReceiptId =
      obx.QueryStringProperty<DeliveryReceiptItemsModel>(
        _entities[40].properties[2],
      );
}

/// [DeliveryReceiptModel] entity fields to define ObjectBox queries.
class DeliveryReceiptModel_ {
  /// See [DeliveryReceiptModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<DeliveryReceiptModel>(
    _entities[41].properties[0],
  );

  /// See [DeliveryReceiptModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<DeliveryReceiptModel>(
    _entities[41].properties[1],
  );

  /// See [DeliveryReceiptModel.tripId].
  static final tripId = obx.QueryStringProperty<DeliveryReceiptModel>(
    _entities[41].properties[2],
  );

  /// See [DeliveryReceiptModel.deliveryDataId].
  static final deliveryDataId = obx.QueryStringProperty<DeliveryReceiptModel>(
    _entities[41].properties[3],
  );

  /// See [DeliveryReceiptModel.customerImagesString].
  static final customerImagesString =
      obx.QueryStringProperty<DeliveryReceiptModel>(
        _entities[41].properties[4],
      );

  /// See [DeliveryReceiptModel.customerImages].
  static final customerImages =
      obx.QueryStringVectorProperty<DeliveryReceiptModel>(
        _entities[41].properties[5],
      );
}

/// [ReturnItemsEntity] entity fields to define ObjectBox queries.
class ReturnItemsEntity_ {
  /// See [ReturnItemsEntity.dbId].
  static final dbId = obx.QueryIntegerProperty<ReturnItemsEntity>(
    _entities[42].properties[0],
  );

  /// See [ReturnItemsEntity.id].
  static final id = obx.QueryStringProperty<ReturnItemsEntity>(
    _entities[42].properties[1],
  );

  /// See [ReturnItemsEntity.collectionId].
  static final collectionId = obx.QueryStringProperty<ReturnItemsEntity>(
    _entities[42].properties[2],
  );

  /// See [ReturnItemsEntity.collectionName].
  static final collectionName = obx.QueryStringProperty<ReturnItemsEntity>(
    _entities[42].properties[3],
  );

  /// See [ReturnItemsEntity.trip].
  static final trip = obx.QueryRelationToOne<ReturnItemsEntity, TripModel>(
    _entities[42].properties[4],
  );

  /// See [ReturnItemsEntity.deliveryData].
  static final deliveryData =
      obx.QueryRelationToOne<ReturnItemsEntity, DeliveryDataModel>(
        _entities[42].properties[5],
      );

  /// See [ReturnItemsEntity.invoiceItem].
  static final invoiceItem =
      obx.QueryRelationToOne<ReturnItemsEntity, InvoiceItemsModel>(
        _entities[42].properties[6],
      );

  /// See [ReturnItemsEntity.invoiceData].
  static final invoiceData =
      obx.QueryRelationToOne<ReturnItemsEntity, InvoiceDataModel>(
        _entities[42].properties[7],
      );

  /// See [ReturnItemsEntity.refId].
  static final refId = obx.QueryStringProperty<ReturnItemsEntity>(
    _entities[42].properties[8],
  );

  /// See [ReturnItemsEntity.quantity].
  static final quantity = obx.QueryIntegerProperty<ReturnItemsEntity>(
    _entities[42].properties[9],
  );

  /// See [ReturnItemsEntity.uom].
  static final uom = obx.QueryStringProperty<ReturnItemsEntity>(
    _entities[42].properties[10],
  );

  /// See [ReturnItemsEntity.created].
  static final created = obx.QueryDateProperty<ReturnItemsEntity>(
    _entities[42].properties[11],
  );

  /// See [ReturnItemsEntity.updated].
  static final updated = obx.QueryDateProperty<ReturnItemsEntity>(
    _entities[42].properties[12],
  );
}

/// [ReturnItemsModel] entity fields to define ObjectBox queries.
class ReturnItemsModel_ {
  /// See [ReturnItemsModel.objectBoxId].
  static final objectBoxId = obx.QueryIntegerProperty<ReturnItemsModel>(
    _entities[43].properties[0],
  );

  /// See [ReturnItemsModel.pocketbaseId].
  static final pocketbaseId = obx.QueryStringProperty<ReturnItemsModel>(
    _entities[43].properties[1],
  );

  /// See [ReturnItemsModel.tripId].
  static final tripId = obx.QueryStringProperty<ReturnItemsModel>(
    _entities[43].properties[2],
  );
}
